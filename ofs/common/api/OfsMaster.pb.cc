// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OfsMaster.proto

#include "OfsMaster.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_OfsMaster_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EndPoint_OfsMaster_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OfsMaster_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_File_OfsMaster_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OfsMaster_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BlockLease_OfsMaster_2eproto;
namespace ofs {
namespace api {
namespace master {
class LoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginReq> _instance;
} _LoginReq_default_instance_;
class LoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginResponse> _instance;
} _LoginResponse_default_instance_;
class MakeDirRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MakeDirRequest> _instance;
} _MakeDirRequest_default_instance_;
class MakeDirResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MakeDirResponse> _instance;
} _MakeDirResponse_default_instance_;
class CreateFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFileRequest> _instance;
} _CreateFileRequest_default_instance_;
class CreateFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFileResponse> _instance;
} _CreateFileResponse_default_instance_;
class ListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListRequest> _instance;
} _ListRequest_default_instance_;
class FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<File> _instance;
} _File_default_instance_;
class ListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListResponse> _instance;
} _ListResponse_default_instance_;
class RemoveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveRequest> _instance;
} _RemoveRequest_default_instance_;
class RemoveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveResponse> _instance;
} _RemoveResponse_default_instance_;
class FileStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileStatusRequest> _instance;
} _FileStatusRequest_default_instance_;
class FileStatusResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileStatusRespone> _instance;
} _FileStatusRespone_default_instance_;
class EndPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EndPoint> _instance;
} _EndPoint_default_instance_;
class ReadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRequest> _instance;
} _ReadRequest_default_instance_;
class ReadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadResponse> _instance;
} _ReadResponse_default_instance_;
class BlockLeaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockLease> _instance;
} _BlockLease_default_instance_;
class WriteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteRequest> _instance;
} _WriteRequest_default_instance_;
class WriteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteResponse> _instance;
} _WriteResponse_default_instance_;
class AppendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppendRequest> _instance;
} _AppendRequest_default_instance_;
class AppendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppendResponse> _instance;
} _AppendResponse_default_instance_;
}  // namespace master
}  // namespace api
}  // namespace ofs
static void InitDefaultsLoginReq_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_LoginReq_default_instance_;
    new (ptr) ::ofs::api::master::LoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::LoginReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginReq_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginReq_OfsMaster_2eproto}, {}};

static void InitDefaultsLoginResponse_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_LoginResponse_default_instance_;
    new (ptr) ::ofs::api::master::LoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::LoginResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginResponse_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginResponse_OfsMaster_2eproto}, {}};

static void InitDefaultsMakeDirRequest_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_MakeDirRequest_default_instance_;
    new (ptr) ::ofs::api::master::MakeDirRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::MakeDirRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MakeDirRequest_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMakeDirRequest_OfsMaster_2eproto}, {}};

static void InitDefaultsMakeDirResponse_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_MakeDirResponse_default_instance_;
    new (ptr) ::ofs::api::master::MakeDirResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::MakeDirResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MakeDirResponse_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMakeDirResponse_OfsMaster_2eproto}, {}};

static void InitDefaultsCreateFileRequest_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_CreateFileRequest_default_instance_;
    new (ptr) ::ofs::api::master::CreateFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::CreateFileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateFileRequest_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateFileRequest_OfsMaster_2eproto}, {}};

static void InitDefaultsCreateFileResponse_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_CreateFileResponse_default_instance_;
    new (ptr) ::ofs::api::master::CreateFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::CreateFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateFileResponse_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateFileResponse_OfsMaster_2eproto}, {}};

static void InitDefaultsListRequest_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_ListRequest_default_instance_;
    new (ptr) ::ofs::api::master::ListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::ListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListRequest_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListRequest_OfsMaster_2eproto}, {}};

static void InitDefaultsFile_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_File_default_instance_;
    new (ptr) ::ofs::api::master::File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::File::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_File_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFile_OfsMaster_2eproto}, {}};

static void InitDefaultsListResponse_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_ListResponse_default_instance_;
    new (ptr) ::ofs::api::master::ListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::ListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListResponse_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListResponse_OfsMaster_2eproto}, {
      &scc_info_File_OfsMaster_2eproto.base,}};

static void InitDefaultsRemoveRequest_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_RemoveRequest_default_instance_;
    new (ptr) ::ofs::api::master::RemoveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::RemoveRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveRequest_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveRequest_OfsMaster_2eproto}, {}};

static void InitDefaultsRemoveResponse_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_RemoveResponse_default_instance_;
    new (ptr) ::ofs::api::master::RemoveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::RemoveResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveResponse_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveResponse_OfsMaster_2eproto}, {}};

static void InitDefaultsFileStatusRequest_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_FileStatusRequest_default_instance_;
    new (ptr) ::ofs::api::master::FileStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::FileStatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileStatusRequest_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileStatusRequest_OfsMaster_2eproto}, {}};

static void InitDefaultsFileStatusRespone_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_FileStatusRespone_default_instance_;
    new (ptr) ::ofs::api::master::FileStatusRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::FileStatusRespone::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FileStatusRespone_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFileStatusRespone_OfsMaster_2eproto}, {
      &scc_info_File_OfsMaster_2eproto.base,}};

static void InitDefaultsEndPoint_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_EndPoint_default_instance_;
    new (ptr) ::ofs::api::master::EndPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::EndPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EndPoint_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEndPoint_OfsMaster_2eproto}, {}};

static void InitDefaultsReadRequest_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_ReadRequest_default_instance_;
    new (ptr) ::ofs::api::master::ReadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::ReadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadRequest_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadRequest_OfsMaster_2eproto}, {}};

static void InitDefaultsReadResponse_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_ReadResponse_default_instance_;
    new (ptr) ::ofs::api::master::ReadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::ReadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadResponse_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadResponse_OfsMaster_2eproto}, {
      &scc_info_EndPoint_OfsMaster_2eproto.base,}};

static void InitDefaultsBlockLease_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_BlockLease_default_instance_;
    new (ptr) ::ofs::api::master::BlockLease();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::BlockLease::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BlockLease_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBlockLease_OfsMaster_2eproto}, {
      &scc_info_EndPoint_OfsMaster_2eproto.base,}};

static void InitDefaultsWriteRequest_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_WriteRequest_default_instance_;
    new (ptr) ::ofs::api::master::WriteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::WriteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteRequest_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteRequest_OfsMaster_2eproto}, {}};

static void InitDefaultsWriteResponse_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_WriteResponse_default_instance_;
    new (ptr) ::ofs::api::master::WriteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::WriteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WriteResponse_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWriteResponse_OfsMaster_2eproto}, {
      &scc_info_BlockLease_OfsMaster_2eproto.base,}};

static void InitDefaultsAppendRequest_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_AppendRequest_default_instance_;
    new (ptr) ::ofs::api::master::AppendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::AppendRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppendRequest_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppendRequest_OfsMaster_2eproto}, {}};

static void InitDefaultsAppendResponse_OfsMaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ofs::api::master::_AppendResponse_default_instance_;
    new (ptr) ::ofs::api::master::AppendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ofs::api::master::AppendResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AppendResponse_OfsMaster_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAppendResponse_OfsMaster_2eproto}, {
      &scc_info_BlockLease_OfsMaster_2eproto.base,}};

void InitDefaults_OfsMaster_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LoginReq_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginResponse_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MakeDirRequest_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MakeDirResponse_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateFileRequest_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateFileResponse_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListRequest_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_File_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListResponse_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveRequest_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveResponse_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileStatusRequest_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileStatusRespone_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EndPoint_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRequest_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadResponse_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlockLease_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteRequest_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteResponse_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppendRequest_OfsMaster_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppendResponse_OfsMaster_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_OfsMaster_2eproto[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_OfsMaster_2eproto[2];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors_OfsMaster_2eproto[1];

const ::google::protobuf::uint32 TableStruct_OfsMaster_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::LoginReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::LoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::LoginReq, name_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::LoginReq, password_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::LoginResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::LoginResponse, errcode_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::LoginResponse, token_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::LoginResponse, blocksize_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::MakeDirRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::MakeDirRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::MakeDirRequest, token_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::MakeDirRequest, authority_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::MakeDirRequest, directory_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::MakeDirRequest, name_),
  0,
  3,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::MakeDirResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::MakeDirResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::MakeDirResponse, errcode_),
  0,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::CreateFileRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::CreateFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::CreateFileRequest, token_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::CreateFileRequest, authority_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::CreateFileRequest, directory_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::CreateFileRequest, name_),
  0,
  3,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::CreateFileResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::CreateFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::CreateFileResponse, errcode_),
  0,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ListRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ListRequest, token_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ListRequest, path_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::File, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::File, name_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::File, owner_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::File, group_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::File, authority_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::File, size_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::File, createtime_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::File, updatetime_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::File, dir_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ListResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ListResponse, errcode_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ListResponse, files_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::RemoveRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::RemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::RemoveRequest, token_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::RemoveRequest, path_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::RemoveResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::RemoveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::RemoveResponse, errcode_),
  0,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::FileStatusRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::FileStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::FileStatusRequest, token_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::FileStatusRequest, path_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::FileStatusRespone, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::FileStatusRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::FileStatusRespone, errcode_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::FileStatusRespone, file_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::EndPoint, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::EndPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::EndPoint, host_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::EndPoint, port_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ReadRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ReadRequest, token_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ReadRequest, path_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ReadRequest, blockindex_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ReadResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ReadResponse, errcode_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ReadResponse, id_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::ReadResponse, eps_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::BlockLease, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::BlockLease, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::BlockLease, id_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::BlockLease, until_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::BlockLease, version_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::BlockLease, newversion_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::BlockLease, ep_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::BlockLease, chunkservers_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::BlockLease, key_),
  2,
  3,
  4,
  5,
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::WriteRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::WriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::WriteRequest, token_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::WriteRequest, path_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::WriteRequest, blockindex_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::WriteResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::WriteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::WriteResponse, errcode_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::WriteResponse, lease_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::AppendRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::AppendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::AppendRequest, token_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::AppendRequest, path_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::AppendResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::AppendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::AppendResponse, errcode_),
  PROTOBUF_FIELD_OFFSET(::ofs::api::master::AppendResponse, lease_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::ofs::api::master::LoginReq)},
  { 9, 17, sizeof(::ofs::api::master::LoginResponse)},
  { 20, 29, sizeof(::ofs::api::master::MakeDirRequest)},
  { 33, 39, sizeof(::ofs::api::master::MakeDirResponse)},
  { 40, 49, sizeof(::ofs::api::master::CreateFileRequest)},
  { 53, 59, sizeof(::ofs::api::master::CreateFileResponse)},
  { 60, 67, sizeof(::ofs::api::master::ListRequest)},
  { 69, 82, sizeof(::ofs::api::master::File)},
  { 90, 97, sizeof(::ofs::api::master::ListResponse)},
  { 99, 106, sizeof(::ofs::api::master::RemoveRequest)},
  { 108, 114, sizeof(::ofs::api::master::RemoveResponse)},
  { 115, 122, sizeof(::ofs::api::master::FileStatusRequest)},
  { 124, 131, sizeof(::ofs::api::master::FileStatusRespone)},
  { 133, 140, sizeof(::ofs::api::master::EndPoint)},
  { 142, 150, sizeof(::ofs::api::master::ReadRequest)},
  { 153, 161, sizeof(::ofs::api::master::ReadResponse)},
  { 164, 176, sizeof(::ofs::api::master::BlockLease)},
  { 183, 191, sizeof(::ofs::api::master::WriteRequest)},
  { 194, 201, sizeof(::ofs::api::master::WriteResponse)},
  { 203, 210, sizeof(::ofs::api::master::AppendRequest)},
  { 212, 219, sizeof(::ofs::api::master::AppendResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_LoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_LoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_MakeDirRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_MakeDirResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_CreateFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_CreateFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_ListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_ListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_RemoveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_RemoveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_FileStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_FileStatusRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_EndPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_ReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_ReadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_BlockLease_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_WriteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_WriteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_AppendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ofs::api::master::_AppendResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_OfsMaster_2eproto = {
  {}, AddDescriptors_OfsMaster_2eproto, "OfsMaster.proto", schemas,
  file_default_instances, TableStruct_OfsMaster_2eproto::offsets,
  file_level_metadata_OfsMaster_2eproto, 21, file_level_enum_descriptors_OfsMaster_2eproto, file_level_service_descriptors_OfsMaster_2eproto,
};

const char descriptor_table_protodef_OfsMaster_2eproto[] =
  "\n\017OfsMaster.proto\022\016ofs.api.master\"*\n\010Log"
  "inReq\022\014\n\004name\030\001 \002(\t\022\020\n\010password\030\002 \002(\t\"]\n"
  "\rLoginResponse\022*\n\007errCode\030\001 \002(\0162\031.ofs.ap"
  "i.master.ErrorCode\022\r\n\005token\030\002 \001(\t\022\021\n\tblo"
  "ckSize\030\003 \001(\005\"S\n\016MakeDirRequest\022\r\n\005token\030"
  "\001 \002(\t\022\021\n\tauthority\030\002 \002(\005\022\021\n\tdirectory\030\003 "
  "\002(\t\022\014\n\004name\030\004 \002(\t\"=\n\017MakeDirResponse\022*\n\007"
  "errCode\030\001 \002(\0162\031.ofs.api.master.ErrorCode"
  "\"V\n\021CreateFileRequest\022\r\n\005token\030\001 \002(\t\022\021\n\t"
  "authority\030\002 \002(\005\022\021\n\tdirectory\030\003 \002(\t\022\014\n\004na"
  "me\030\004 \002(\t\"@\n\022CreateFileResponse\022*\n\007errCod"
  "e\030\001 \002(\0162\031.ofs.api.master.ErrorCode\"*\n\013Li"
  "stRequest\022\r\n\005token\030\001 \002(\t\022\014\n\004path\030\002 \002(\t\"\210"
  "\001\n\004File\022\014\n\004name\030\001 \002(\t\022\r\n\005owner\030\002 \002(\t\022\r\n\005"
  "group\030\003 \002(\t\022\021\n\tauthority\030\004 \002(\005\022\014\n\004size\030\005"
  " \002(\005\022\022\n\ncreateTime\030\006 \002(\003\022\022\n\nupdateTime\030\007"
  " \002(\003\022\013\n\003dir\030\010 \002(\010\"_\n\014ListResponse\022*\n\007err"
  "Code\030\001 \002(\0162\031.ofs.api.master.ErrorCode\022#\n"
  "\005files\030\002 \003(\0132\024.ofs.api.master.File\",\n\rRe"
  "moveRequest\022\r\n\005token\030\001 \002(\t\022\014\n\004path\030\002 \002(\t"
  "\"<\n\016RemoveResponse\022*\n\007errCode\030\001 \002(\0162\031.of"
  "s.api.master.ErrorCode\"0\n\021FileStatusRequ"
  "est\022\r\n\005token\030\001 \002(\t\022\014\n\004path\030\002 \002(\t\"c\n\021File"
  "StatusRespone\022*\n\007errCode\030\001 \002(\0162\031.ofs.api"
  ".master.ErrorCode\022\"\n\004file\030\002 \001(\0132\024.ofs.ap"
  "i.master.File\"&\n\010EndPoint\022\014\n\004host\030\002 \002(\t\022"
  "\014\n\004port\030\003 \002(\005\">\n\013ReadRequest\022\r\n\005token\030\001 "
  "\002(\t\022\014\n\004path\030\002 \002(\t\022\022\n\nblockIndex\030\003 \002(\005\"m\n"
  "\014ReadResponse\022*\n\007errCode\030\001 \002(\0162\031.ofs.api"
  ".master.ErrorCode\022\n\n\002id\030\002 \001(\003\022%\n\003eps\030\003 \003"
  "(\0132\030.ofs.api.master.EndPoint\"\225\001\n\nBlockLe"
  "ase\022\n\n\002id\030\001 \002(\003\022\r\n\005until\030\002 \002(\003\022\017\n\007versio"
  "n\030\003 \002(\003\022\022\n\nnewVersion\030\004 \002(\003\022$\n\002ep\030\005 \002(\0132"
  "\030.ofs.api.master.EndPoint\022\024\n\014chunkserver"
  "s\030\006 \003(\005\022\013\n\003key\030\007 \002(\t\"\?\n\014WriteRequest\022\r\n\005"
  "token\030\001 \002(\t\022\014\n\004path\030\002 \002(\t\022\022\n\nblockIndex\030"
  "\003 \002(\005\"f\n\rWriteResponse\022*\n\007errCode\030\001 \002(\0162"
  "\031.ofs.api.master.ErrorCode\022)\n\005lease\030\002 \002("
  "\0132\032.ofs.api.master.BlockLease\",\n\rAppendR"
  "equest\022\r\n\005token\030\001 \002(\t\022\014\n\004path\030\002 \002(\t\"g\n\016A"
  "ppendResponse\022*\n\007errCode\030\001 \002(\0162\031.ofs.api"
  ".master.ErrorCode\022)\n\005lease\030\002 \002(\0132\032.ofs.a"
  "pi.master.BlockLease*\311\002\n\tErrorCode\022\013\n\007EC"
  "_NONE\020\000\022\025\n\021EC_FILE_NOT_EIXST\020\001\022\021\n\rEC_FIL"
  "E_EIXST\020\002\022\026\n\022EC_PERMISSION_DENY\020\003\022\024\n\020EC_"
  "DIR_NOT_EMPTY\020\004\022\027\n\023EC_AUTHORITY_EXPIRE\020\005"
  "\022\r\n\tEC_IS_DIR\020\006\022\035\n\031EC_USER_OR_PASSWORD_E"
  "RROR\020\007\022\022\n\016EC_USER_EXPIRE\020\010\022\027\n\023EC_IS_NOT_"
  "DIRECTORY\020\t\022 \n\034EC_ALREADY_EXIST_DELETE_F"
  "ILE\020\n\022\023\n\017EC_OUT_OF_RANGE\020\013\022\026\n\022EC_BLOCK_N"
  "OT_READY\020\014\022\024\n\020EC_BLOCK_MISSING\020\r*\310\001\n\rAut"
  "horityType\022\021\n\rAT_OWNER_READ\020\001\022\022\n\016AT_OWNE"
  "R_WRITE\020\002\022\024\n\020AT_OWNER_EXECUTE\020\004\022\021\n\rAT_GR"
  "OUP_READ\020\010\022\022\n\016AT_GROUP_WRITE\020\020\022\024\n\020AT_GRO"
  "UP_EXECUTE\020 \022\021\n\rAT_OTHER_READ\020@\022\023\n\016AT_OT"
  "HER_WRITE\020\200\001\022\025\n\020AT_OTHER_EXECUTE\020\200\0022\235\005\n\016"
  "OfsFileService\022@\n\005Login\022\030.ofs.api.master"
  ".LoginReq\032\035.ofs.api.master.LoginResponse"
  "\022J\n\007MakeDir\022\036.ofs.api.master.MakeDirRequ"
  "est\032\037.ofs.api.master.MakeDirResponse\022O\n\006"
  "Create\022!.ofs.api.master.CreateFileReques"
  "t\032\".ofs.api.master.CreateFileResponse\022A\n"
  "\004List\022\033.ofs.api.master.ListRequest\032\034.ofs"
  ".api.master.ListResponse\022G\n\006Remove\022\035.ofs"
  ".api.master.RemoveRequest\032\036.ofs.api.mast"
  "er.RemoveResponse\022N\n\006Status\022!.ofs.api.ma"
  "ster.FileStatusRequest\032!.ofs.api.master."
  "FileStatusRespone\022A\n\004Read\022\033.ofs.api.mast"
  "er.ReadRequest\032\034.ofs.api.master.ReadResp"
  "onse\022D\n\005Write\022\034.ofs.api.master.WriteRequ"
  "est\032\035.ofs.api.master.WriteResponse\022G\n\006Ap"
  "pend\022\035.ofs.api.master.AppendRequest\032\036.of"
  "s.api.master.AppendResponseB\003\200\001\001"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_OfsMaster_2eproto = {
  false, InitDefaults_OfsMaster_2eproto, 
  descriptor_table_protodef_OfsMaster_2eproto,
  "OfsMaster.proto", &assign_descriptors_table_OfsMaster_2eproto, 2912,
};

void AddDescriptors_OfsMaster_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_OfsMaster_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_OfsMaster_2eproto = []() { AddDescriptors_OfsMaster_2eproto(); return true; }();
namespace ofs {
namespace api {
namespace master {
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OfsMaster_2eproto);
  return file_level_enum_descriptors_OfsMaster_2eproto[0];
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AuthorityType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OfsMaster_2eproto);
  return file_level_enum_descriptors_OfsMaster_2eproto[1];
}
bool AuthorityType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LoginReq::InitAsDefaultInstance() {
}
class LoginReq::HasBitSetters {
 public:
  static void set_has_name(LoginReq* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_password(LoginReq* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kNameFieldNumber;
const int LoginReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.LoginReq)
}
LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.LoginReq)
}

void LoginReq::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LoginReq_OfsMaster_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:ofs.api.master.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginReq& LoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginReq_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginReq::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginReq*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.LoginReq.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.LoginReq.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.LoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.LoginReq.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.LoginReq.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.LoginReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.LoginReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.LoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.LoginReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.LoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.LoginReq)
  return target;
}

size_t LoginReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.LoginReq)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t LoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.LoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq* source =
      ::google::protobuf::DynamicCastToGenerated<LoginReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoginResponse::InitAsDefaultInstance() {
}
class LoginResponse::HasBitSetters {
 public:
  static void set_has_errcode(LoginResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_token(LoginResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_blocksize(LoginResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResponse::kErrCodeFieldNumber;
const int LoginResponse::kTokenFieldNumber;
const int LoginResponse::kBlockSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResponse::LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&errcode_, &from.errcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&blocksize_) -
    reinterpret_cast<char*>(&errcode_)) + sizeof(blocksize_));
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.LoginResponse)
}

void LoginResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LoginResponse_OfsMaster_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blocksize_) -
      reinterpret_cast<char*>(&errcode_)) + sizeof(blocksize_));
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:ofs.api.master.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginResponse& LoginResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginResponse_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    token_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&errcode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&blocksize_) -
        reinterpret_cast<char*>(&errcode_)) + sizeof(blocksize_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::ofs::api::master::ErrorCode_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_errcode(static_cast<::ofs::api::master::ErrorCode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.LoginResponse.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional int32 blockSize = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_blocksize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.LoginResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ofs::api::master::ErrorCode_IsValid(value)) {
            set_errcode(static_cast< ::ofs::api::master::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.LoginResponse.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 blockSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_blocksize(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blocksize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.LoginResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // optional string token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.LoginResponse.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // optional int32 blockSize = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->blocksize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // optional string token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.LoginResponse.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // optional int32 blockSize = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->blocksize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.LoginResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string token = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // optional int32 blockSize = 3;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blocksize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResponse* source =
      ::google::protobuf::DynamicCastToGenerated<LoginResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.LoginResponse)
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      errcode_ = from.errcode_;
    }
    if (cached_has_bits & 0x00000004u) {
      blocksize_ = from.blocksize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  swap(blocksize_, other->blocksize_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MakeDirRequest::InitAsDefaultInstance() {
}
class MakeDirRequest::HasBitSetters {
 public:
  static void set_has_token(MakeDirRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_authority(MakeDirRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_directory(MakeDirRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_name(MakeDirRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MakeDirRequest::kTokenFieldNumber;
const int MakeDirRequest::kAuthorityFieldNumber;
const int MakeDirRequest::kDirectoryFieldNumber;
const int MakeDirRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MakeDirRequest::MakeDirRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.MakeDirRequest)
}
MakeDirRequest::MakeDirRequest(const MakeDirRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_directory()) {
    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  authority_ = from.authority_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.MakeDirRequest)
}

void MakeDirRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MakeDirRequest_OfsMaster_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authority_ = 0;
}

MakeDirRequest::~MakeDirRequest() {
  // @@protoc_insertion_point(destructor:ofs.api.master.MakeDirRequest)
  SharedDtor();
}

void MakeDirRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MakeDirRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MakeDirRequest& MakeDirRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MakeDirRequest_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void MakeDirRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.MakeDirRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      directory_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  authority_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MakeDirRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MakeDirRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.MakeDirRequest.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 authority = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_authority(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string directory = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.MakeDirRequest.directory");
        object = msg->mutable_directory();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.MakeDirRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MakeDirRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.MakeDirRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.MakeDirRequest.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 authority = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_authority(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &authority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string directory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directory()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->directory().data(), static_cast<int>(this->directory().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.MakeDirRequest.directory");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.MakeDirRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.MakeDirRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.MakeDirRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MakeDirRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.MakeDirRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.MakeDirRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required int32 authority = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->authority(), output);
  }

  // required string directory = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.MakeDirRequest.directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->directory(), output);
  }

  // required string name = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.MakeDirRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.MakeDirRequest)
}

::google::protobuf::uint8* MakeDirRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.MakeDirRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.MakeDirRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required int32 authority = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->authority(), target);
  }

  // required string directory = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.MakeDirRequest.directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->directory(), target);
  }

  // required string name = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.MakeDirRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.MakeDirRequest)
  return target;
}

size_t MakeDirRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.MakeDirRequest)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_directory()) {
    // required string directory = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());
  }

  if (has_name()) {
    // required string name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_authority()) {
    // required int32 authority = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->authority());
  }

  return total_size;
}
size_t MakeDirRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.MakeDirRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required string directory = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());

    // required string name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 authority = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->authority());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MakeDirRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.MakeDirRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MakeDirRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MakeDirRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.MakeDirRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.MakeDirRequest)
    MergeFrom(*source);
  }
}

void MakeDirRequest::MergeFrom(const MakeDirRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.MakeDirRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000008u) {
      authority_ = from.authority_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MakeDirRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.MakeDirRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MakeDirRequest::CopyFrom(const MakeDirRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.MakeDirRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MakeDirRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void MakeDirRequest::Swap(MakeDirRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MakeDirRequest::InternalSwap(MakeDirRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  directory_.Swap(&other->directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(authority_, other->authority_);
}

::google::protobuf::Metadata MakeDirRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MakeDirResponse::InitAsDefaultInstance() {
}
class MakeDirResponse::HasBitSetters {
 public:
  static void set_has_errcode(MakeDirResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MakeDirResponse::kErrCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MakeDirResponse::MakeDirResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.MakeDirResponse)
}
MakeDirResponse::MakeDirResponse(const MakeDirResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.MakeDirResponse)
}

void MakeDirResponse::SharedCtor() {
  errcode_ = 0;
}

MakeDirResponse::~MakeDirResponse() {
  // @@protoc_insertion_point(destructor:ofs.api.master.MakeDirResponse)
  SharedDtor();
}

void MakeDirResponse::SharedDtor() {
}

void MakeDirResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MakeDirResponse& MakeDirResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MakeDirResponse_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void MakeDirResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.MakeDirResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MakeDirResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MakeDirResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::ofs::api::master::ErrorCode_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_errcode(static_cast<::ofs::api::master::ErrorCode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MakeDirResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.MakeDirResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ofs::api::master::ErrorCode_IsValid(value)) {
            set_errcode(static_cast< ::ofs::api::master::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.MakeDirResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.MakeDirResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MakeDirResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.MakeDirResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.MakeDirResponse)
}

::google::protobuf::uint8* MakeDirResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.MakeDirResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.MakeDirResponse)
  return target;
}

size_t MakeDirResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.MakeDirResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MakeDirResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.MakeDirResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MakeDirResponse* source =
      ::google::protobuf::DynamicCastToGenerated<MakeDirResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.MakeDirResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.MakeDirResponse)
    MergeFrom(*source);
  }
}

void MakeDirResponse::MergeFrom(const MakeDirResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.MakeDirResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errcode()) {
    set_errcode(from.errcode());
  }
}

void MakeDirResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.MakeDirResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MakeDirResponse::CopyFrom(const MakeDirResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.MakeDirResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MakeDirResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MakeDirResponse::Swap(MakeDirResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MakeDirResponse::InternalSwap(MakeDirResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(errcode_, other->errcode_);
}

::google::protobuf::Metadata MakeDirResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateFileRequest::InitAsDefaultInstance() {
}
class CreateFileRequest::HasBitSetters {
 public:
  static void set_has_token(CreateFileRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_authority(CreateFileRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_directory(CreateFileRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_name(CreateFileRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFileRequest::kTokenFieldNumber;
const int CreateFileRequest::kAuthorityFieldNumber;
const int CreateFileRequest::kDirectoryFieldNumber;
const int CreateFileRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFileRequest::CreateFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.CreateFileRequest)
}
CreateFileRequest::CreateFileRequest(const CreateFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_directory()) {
    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  authority_ = from.authority_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.CreateFileRequest)
}

void CreateFileRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateFileRequest_OfsMaster_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authority_ = 0;
}

CreateFileRequest::~CreateFileRequest() {
  // @@protoc_insertion_point(destructor:ofs.api.master.CreateFileRequest)
  SharedDtor();
}

void CreateFileRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateFileRequest& CreateFileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateFileRequest_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void CreateFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.CreateFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      directory_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  authority_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateFileRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateFileRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.CreateFileRequest.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 authority = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_authority(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string directory = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.CreateFileRequest.directory");
        object = msg->mutable_directory();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.CreateFileRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.CreateFileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.CreateFileRequest.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 authority = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_authority(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &authority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string directory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directory()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->directory().data(), static_cast<int>(this->directory().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.CreateFileRequest.directory");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.CreateFileRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.CreateFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.CreateFileRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.CreateFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.CreateFileRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required int32 authority = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->authority(), output);
  }

  // required string directory = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.CreateFileRequest.directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->directory(), output);
  }

  // required string name = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.CreateFileRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.CreateFileRequest)
}

::google::protobuf::uint8* CreateFileRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.CreateFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.CreateFileRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required int32 authority = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->authority(), target);
  }

  // required string directory = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.CreateFileRequest.directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->directory(), target);
  }

  // required string name = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.CreateFileRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.CreateFileRequest)
  return target;
}

size_t CreateFileRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.CreateFileRequest)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_directory()) {
    // required string directory = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());
  }

  if (has_name()) {
    // required string name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_authority()) {
    // required int32 authority = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->authority());
  }

  return total_size;
}
size_t CreateFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.CreateFileRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required string directory = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());

    // required string name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 authority = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->authority());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.CreateFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFileRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateFileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.CreateFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.CreateFileRequest)
    MergeFrom(*source);
  }
}

void CreateFileRequest::MergeFrom(const CreateFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.CreateFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000008u) {
      authority_ = from.authority_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.CreateFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFileRequest::CopyFrom(const CreateFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.CreateFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFileRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void CreateFileRequest::Swap(CreateFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFileRequest::InternalSwap(CreateFileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  directory_.Swap(&other->directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(authority_, other->authority_);
}

::google::protobuf::Metadata CreateFileRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateFileResponse::InitAsDefaultInstance() {
}
class CreateFileResponse::HasBitSetters {
 public:
  static void set_has_errcode(CreateFileResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFileResponse::kErrCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFileResponse::CreateFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.CreateFileResponse)
}
CreateFileResponse::CreateFileResponse(const CreateFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.CreateFileResponse)
}

void CreateFileResponse::SharedCtor() {
  errcode_ = 0;
}

CreateFileResponse::~CreateFileResponse() {
  // @@protoc_insertion_point(destructor:ofs.api.master.CreateFileResponse)
  SharedDtor();
}

void CreateFileResponse::SharedDtor() {
}

void CreateFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateFileResponse& CreateFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateFileResponse_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void CreateFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.CreateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateFileResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateFileResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::ofs::api::master::ErrorCode_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_errcode(static_cast<::ofs::api::master::ErrorCode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.CreateFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ofs::api::master::ErrorCode_IsValid(value)) {
            set_errcode(static_cast< ::ofs::api::master::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.CreateFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.CreateFileResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.CreateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.CreateFileResponse)
}

::google::protobuf::uint8* CreateFileResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.CreateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.CreateFileResponse)
  return target;
}

size_t CreateFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.CreateFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.CreateFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFileResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CreateFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.CreateFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.CreateFileResponse)
    MergeFrom(*source);
  }
}

void CreateFileResponse::MergeFrom(const CreateFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.CreateFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errcode()) {
    set_errcode(from.errcode());
  }
}

void CreateFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.CreateFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFileResponse::CopyFrom(const CreateFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.CreateFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFileResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CreateFileResponse::Swap(CreateFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFileResponse::InternalSwap(CreateFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(errcode_, other->errcode_);
}

::google::protobuf::Metadata CreateFileResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListRequest::InitAsDefaultInstance() {
}
class ListRequest::HasBitSetters {
 public:
  static void set_has_token(ListRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_path(ListRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListRequest::kTokenFieldNumber;
const int ListRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRequest::ListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.ListRequest)
}
ListRequest::ListRequest(const ListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.ListRequest)
}

void ListRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListRequest_OfsMaster_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListRequest::~ListRequest() {
  // @@protoc_insertion_point(destructor:ofs.api.master.ListRequest)
  SharedDtor();
}

void ListRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListRequest& ListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListRequest_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void ListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.ListRequest.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.ListRequest.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.ListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.ListRequest.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.ListRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.ListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.ListRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.ListRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.ListRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.ListRequest)
}

::google::protobuf::uint8* ListRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.ListRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.ListRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.ListRequest)
  return target;
}

size_t ListRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.ListRequest)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_path()) {
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  return total_size;
}
size_t ListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.ListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.ListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.ListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.ListRequest)
    MergeFrom(*source);
  }
}

void ListRequest::MergeFrom(const ListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.ListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
  }
}

void ListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.ListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRequest::CopyFrom(const ListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.ListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ListRequest::Swap(ListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRequest::InternalSwap(ListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void File::InitAsDefaultInstance() {
}
class File::HasBitSetters {
 public:
  static void set_has_name(File* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_owner(File* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_group(File* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_authority(File* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_size(File* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_createtime(File* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_updatetime(File* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_dir(File* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File::kNameFieldNumber;
const int File::kOwnerFieldNumber;
const int File::kGroupFieldNumber;
const int File::kAuthorityFieldNumber;
const int File::kSizeFieldNumber;
const int File::kCreateTimeFieldNumber;
const int File::kUpdateTimeFieldNumber;
const int File::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File::File()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.File)
}
File::File(const File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_owner()) {
    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group()) {
    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  ::memcpy(&authority_, &from.authority_,
    static_cast<size_t>(reinterpret_cast<char*>(&dir_) -
    reinterpret_cast<char*>(&authority_)) + sizeof(dir_));
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.File)
}

void File::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_File_OfsMaster_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&authority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dir_) -
      reinterpret_cast<char*>(&authority_)) + sizeof(dir_));
}

File::~File() {
  // @@protoc_insertion_point(destructor:ofs.api.master.File)
  SharedDtor();
}

void File::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void File::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const File& File::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_File_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void File::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      owner_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      group_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&authority_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dir_) -
        reinterpret_cast<char*>(&authority_)) + sizeof(dir_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* File::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<File*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.File.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string owner = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.File.owner");
        object = msg->mutable_owner();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string group = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.File.group");
        object = msg->mutable_group();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 authority = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_authority(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 size = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 createTime = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_createtime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 updateTime = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_updatetime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required bool dir = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_dir(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.File)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.File.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string owner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->owner().data(), static_cast<int>(this->owner().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.File.owner");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string group = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group().data(), static_cast<int>(this->group().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.File.group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 authority = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_authority(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &authority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_size(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 createTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_createtime(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 updateTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_updatetime(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool dir = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_dir(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.File)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.File.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string owner = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->owner().data(), static_cast<int>(this->owner().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.File.owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->owner(), output);
  }

  // required string group = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group().data(), static_cast<int>(this->group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.File.group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->group(), output);
  }

  // required int32 authority = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->authority(), output);
  }

  // required int32 size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->size(), output);
  }

  // required int64 createTime = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->createtime(), output);
  }

  // required int64 updateTime = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->updatetime(), output);
  }

  // required bool dir = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->dir(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.File)
}

::google::protobuf::uint8* File::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.File.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string owner = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->owner().data(), static_cast<int>(this->owner().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.File.owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->owner(), target);
  }

  // required string group = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group().data(), static_cast<int>(this->group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.File.group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->group(), target);
  }

  // required int32 authority = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->authority(), target);
  }

  // required int32 size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->size(), target);
  }

  // required int64 createTime = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->createtime(), target);
  }

  // required int64 updateTime = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->updatetime(), target);
  }

  // required bool dir = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->dir(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.File)
  return target;
}

size_t File::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.File)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_owner()) {
    // required string owner = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());
  }

  if (has_group()) {
    // required string group = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());
  }

  if (has_authority()) {
    // required int32 authority = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->authority());
  }

  if (has_size()) {
    // required int32 size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  if (has_createtime()) {
    // required int64 createTime = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->createtime());
  }

  if (has_updatetime()) {
    // required int64 updateTime = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->updatetime());
  }

  if (has_dir()) {
    // required bool dir = 8;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.File)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string owner = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());

    // required string group = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());

    // required int32 authority = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->authority());

    // required int32 size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());

    // required int64 createTime = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->createtime());

    // required int64 updateTime = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->updatetime());

    // required bool dir = 8;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.File)
  GOOGLE_DCHECK_NE(&from, this);
  const File* source =
      ::google::protobuf::DynamicCastToGenerated<File>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.File)
    MergeFrom(*source);
  }
}

void File::MergeFrom(const File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
    }
    if (cached_has_bits & 0x00000008u) {
      authority_ = from.authority_;
    }
    if (cached_has_bits & 0x00000010u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000020u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00000040u) {
      updatetime_ = from.updatetime_;
    }
    if (cached_has_bits & 0x00000080u) {
      dir_ = from.dir_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  return true;
}

void File::Swap(File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File::InternalSwap(File* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  owner_.Swap(&other->owner_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_.Swap(&other->group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(authority_, other->authority_);
  swap(size_, other->size_);
  swap(createtime_, other->createtime_);
  swap(updatetime_, other->updatetime_);
  swap(dir_, other->dir_);
}

::google::protobuf::Metadata File::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListResponse::InitAsDefaultInstance() {
}
class ListResponse::HasBitSetters {
 public:
  static void set_has_errcode(ListResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListResponse::kErrCodeFieldNumber;
const int ListResponse::kFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListResponse::ListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.ListResponse)
}
ListResponse::ListResponse(const ListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      files_(from.files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.ListResponse)
}

void ListResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListResponse_OfsMaster_2eproto.base);
  errcode_ = 0;
}

ListResponse::~ListResponse() {
  // @@protoc_insertion_point(destructor:ofs.api.master.ListResponse)
  SharedDtor();
}

void ListResponse::SharedDtor() {
}

void ListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListResponse& ListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListResponse_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void ListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.ListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::ofs::api::master::ErrorCode_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_errcode(static_cast<::ofs::api::master::ErrorCode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .ofs.api.master.File files = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ofs::api::master::File::_InternalParse;
          object = msg->add_files();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.ListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ofs::api::master::ErrorCode_IsValid(value)) {
            set_errcode(static_cast< ::ofs::api::master::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ofs.api.master.File files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.ListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.ListResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.ListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // repeated .ofs.api.master.File files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->files(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.ListResponse)
}

::google::protobuf::uint8* ListResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.ListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // repeated .ofs.api.master.File files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->files(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.ListResponse)
  return target;
}

size_t ListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.ListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ofs.api.master.File files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->files(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.ListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.ListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.ListResponse)
    MergeFrom(*source);
  }
}

void ListResponse::MergeFrom(const ListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.ListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  if (from.has_errcode()) {
    set_errcode(from.errcode());
  }
}

void ListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.ListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListResponse::CopyFrom(const ListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.ListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->files())) return false;
  return true;
}

void ListResponse::Swap(ListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListResponse::InternalSwap(ListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&files_)->InternalSwap(CastToBase(&other->files_));
  swap(errcode_, other->errcode_);
}

::google::protobuf::Metadata ListResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RemoveRequest::InitAsDefaultInstance() {
}
class RemoveRequest::HasBitSetters {
 public:
  static void set_has_token(RemoveRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_path(RemoveRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveRequest::kTokenFieldNumber;
const int RemoveRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveRequest::RemoveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.RemoveRequest)
}
RemoveRequest::RemoveRequest(const RemoveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.RemoveRequest)
}

void RemoveRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RemoveRequest_OfsMaster_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RemoveRequest::~RemoveRequest() {
  // @@protoc_insertion_point(destructor:ofs.api.master.RemoveRequest)
  SharedDtor();
}

void RemoveRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRequest& RemoveRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RemoveRequest_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void RemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.RemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RemoveRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RemoveRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.RemoveRequest.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.RemoveRequest.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RemoveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.RemoveRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.RemoveRequest.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.RemoveRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.RemoveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.RemoveRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RemoveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.RemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.RemoveRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.RemoveRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.RemoveRequest)
}

::google::protobuf::uint8* RemoveRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.RemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.RemoveRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.RemoveRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.RemoveRequest)
  return target;
}

size_t RemoveRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.RemoveRequest)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_path()) {
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  return total_size;
}
size_t RemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.RemoveRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.RemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRequest* source =
      ::google::protobuf::DynamicCastToGenerated<RemoveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.RemoveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.RemoveRequest)
    MergeFrom(*source);
  }
}

void RemoveRequest::MergeFrom(const RemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.RemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
  }
}

void RemoveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.RemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRequest::CopyFrom(const RemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.RemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RemoveRequest::Swap(RemoveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveRequest::InternalSwap(RemoveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata RemoveRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RemoveResponse::InitAsDefaultInstance() {
}
class RemoveResponse::HasBitSetters {
 public:
  static void set_has_errcode(RemoveResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveResponse::kErrCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveResponse::RemoveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.RemoveResponse)
}
RemoveResponse::RemoveResponse(const RemoveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.RemoveResponse)
}

void RemoveResponse::SharedCtor() {
  errcode_ = 0;
}

RemoveResponse::~RemoveResponse() {
  // @@protoc_insertion_point(destructor:ofs.api.master.RemoveResponse)
  SharedDtor();
}

void RemoveResponse::SharedDtor() {
}

void RemoveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveResponse& RemoveResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RemoveResponse_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void RemoveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.RemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RemoveResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RemoveResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::ofs::api::master::ErrorCode_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_errcode(static_cast<::ofs::api::master::ErrorCode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RemoveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.RemoveResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ofs::api::master::ErrorCode_IsValid(value)) {
            set_errcode(static_cast< ::ofs::api::master::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.RemoveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.RemoveResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RemoveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.RemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.RemoveResponse)
}

::google::protobuf::uint8* RemoveResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.RemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.RemoveResponse)
  return target;
}

size_t RemoveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.RemoveResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.RemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveResponse* source =
      ::google::protobuf::DynamicCastToGenerated<RemoveResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.RemoveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.RemoveResponse)
    MergeFrom(*source);
  }
}

void RemoveResponse::MergeFrom(const RemoveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.RemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errcode()) {
    set_errcode(from.errcode());
  }
}

void RemoveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.RemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveResponse::CopyFrom(const RemoveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.RemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RemoveResponse::Swap(RemoveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveResponse::InternalSwap(RemoveResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(errcode_, other->errcode_);
}

::google::protobuf::Metadata RemoveResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FileStatusRequest::InitAsDefaultInstance() {
}
class FileStatusRequest::HasBitSetters {
 public:
  static void set_has_token(FileStatusRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_path(FileStatusRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileStatusRequest::kTokenFieldNumber;
const int FileStatusRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileStatusRequest::FileStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.FileStatusRequest)
}
FileStatusRequest::FileStatusRequest(const FileStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.FileStatusRequest)
}

void FileStatusRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FileStatusRequest_OfsMaster_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FileStatusRequest::~FileStatusRequest() {
  // @@protoc_insertion_point(destructor:ofs.api.master.FileStatusRequest)
  SharedDtor();
}

void FileStatusRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileStatusRequest& FileStatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FileStatusRequest_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void FileStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.FileStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FileStatusRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FileStatusRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.FileStatusRequest.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.FileStatusRequest.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FileStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.FileStatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.FileStatusRequest.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.FileStatusRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.FileStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.FileStatusRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FileStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.FileStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.FileStatusRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.FileStatusRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.FileStatusRequest)
}

::google::protobuf::uint8* FileStatusRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.FileStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.FileStatusRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.FileStatusRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.FileStatusRequest)
  return target;
}

size_t FileStatusRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.FileStatusRequest)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_path()) {
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  return total_size;
}
size_t FileStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.FileStatusRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.FileStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FileStatusRequest* source =
      ::google::protobuf::DynamicCastToGenerated<FileStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.FileStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.FileStatusRequest)
    MergeFrom(*source);
  }
}

void FileStatusRequest::MergeFrom(const FileStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.FileStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
  }
}

void FileStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.FileStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileStatusRequest::CopyFrom(const FileStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.FileStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileStatusRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void FileStatusRequest::Swap(FileStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileStatusRequest::InternalSwap(FileStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata FileStatusRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FileStatusRespone::InitAsDefaultInstance() {
  ::ofs::api::master::_FileStatusRespone_default_instance_._instance.get_mutable()->file_ = const_cast< ::ofs::api::master::File*>(
      ::ofs::api::master::File::internal_default_instance());
}
class FileStatusRespone::HasBitSetters {
 public:
  static void set_has_errcode(FileStatusRespone* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::ofs::api::master::File& file(const FileStatusRespone* msg);
  static void set_has_file(FileStatusRespone* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::ofs::api::master::File&
FileStatusRespone::HasBitSetters::file(const FileStatusRespone* msg) {
  return *msg->file_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileStatusRespone::kErrCodeFieldNumber;
const int FileStatusRespone::kFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileStatusRespone::FileStatusRespone()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.FileStatusRespone)
}
FileStatusRespone::FileStatusRespone(const FileStatusRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_file()) {
    file_ = new ::ofs::api::master::File(*from.file_);
  } else {
    file_ = nullptr;
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.FileStatusRespone)
}

void FileStatusRespone::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FileStatusRespone_OfsMaster_2eproto.base);
  ::memset(&file_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&file_)) + sizeof(errcode_));
}

FileStatusRespone::~FileStatusRespone() {
  // @@protoc_insertion_point(destructor:ofs.api.master.FileStatusRespone)
  SharedDtor();
}

void FileStatusRespone::SharedDtor() {
  if (this != internal_default_instance()) delete file_;
}

void FileStatusRespone::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileStatusRespone& FileStatusRespone::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FileStatusRespone_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void FileStatusRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.FileStatusRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(file_ != nullptr);
    file_->Clear();
  }
  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FileStatusRespone::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FileStatusRespone*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::ofs::api::master::ErrorCode_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_errcode(static_cast<::ofs::api::master::ErrorCode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .ofs.api.master.File file = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ofs::api::master::File::_InternalParse;
        object = msg->mutable_file();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FileStatusRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.FileStatusRespone)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ofs::api::master::ErrorCode_IsValid(value)) {
            set_errcode(static_cast< ::ofs::api::master::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ofs.api.master.File file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.FileStatusRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.FileStatusRespone)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FileStatusRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.FileStatusRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // optional .ofs.api.master.File file = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::file(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.FileStatusRespone)
}

::google::protobuf::uint8* FileStatusRespone::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.FileStatusRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // optional .ofs.api.master.File file = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::file(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.FileStatusRespone)
  return target;
}

size_t FileStatusRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.FileStatusRespone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ofs.api.master.File file = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileStatusRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.FileStatusRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const FileStatusRespone* source =
      ::google::protobuf::DynamicCastToGenerated<FileStatusRespone>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.FileStatusRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.FileStatusRespone)
    MergeFrom(*source);
  }
}

void FileStatusRespone::MergeFrom(const FileStatusRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.FileStatusRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_file()->::ofs::api::master::File::MergeFrom(from.file());
    }
    if (cached_has_bits & 0x00000002u) {
      errcode_ = from.errcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileStatusRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.FileStatusRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileStatusRespone::CopyFrom(const FileStatusRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.FileStatusRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileStatusRespone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_file()) {
    if (!this->file_->IsInitialized()) return false;
  }
  return true;
}

void FileStatusRespone::Swap(FileStatusRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileStatusRespone::InternalSwap(FileStatusRespone* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(file_, other->file_);
  swap(errcode_, other->errcode_);
}

::google::protobuf::Metadata FileStatusRespone::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EndPoint::InitAsDefaultInstance() {
}
class EndPoint::HasBitSetters {
 public:
  static void set_has_host(EndPoint* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_port(EndPoint* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndPoint::kHostFieldNumber;
const int EndPoint::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndPoint::EndPoint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.EndPoint)
}
EndPoint::EndPoint(const EndPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.EndPoint)
}

void EndPoint::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EndPoint_OfsMaster_2eproto.base);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

EndPoint::~EndPoint() {
  // @@protoc_insertion_point(destructor:ofs.api.master.EndPoint)
  SharedDtor();
}

void EndPoint::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EndPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EndPoint& EndPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EndPoint_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void EndPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.EndPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    host_.ClearNonDefaultToEmptyNoArena();
  }
  port_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EndPoint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EndPoint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string host = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.EndPoint.host");
        object = msg->mutable_host();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 port = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EndPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.EndPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.EndPoint.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.EndPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.EndPoint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EndPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.EndPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string host = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.EndPoint.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // required int32 port = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.EndPoint)
}

::google::protobuf::uint8* EndPoint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.EndPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string host = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.EndPoint.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // required int32 port = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.EndPoint)
  return target;
}

size_t EndPoint::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.EndPoint)
  size_t total_size = 0;

  if (has_host()) {
    // required string host = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  if (has_port()) {
    // required int32 port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  return total_size;
}
size_t EndPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.EndPoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string host = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());

    // required int32 port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EndPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.EndPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const EndPoint* source =
      ::google::protobuf::DynamicCastToGenerated<EndPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.EndPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.EndPoint)
    MergeFrom(*source);
  }
}

void EndPoint::MergeFrom(const EndPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.EndPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000002u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EndPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.EndPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndPoint::CopyFrom(const EndPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.EndPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndPoint::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void EndPoint::Swap(EndPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndPoint::InternalSwap(EndPoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
}

::google::protobuf::Metadata EndPoint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadRequest::InitAsDefaultInstance() {
}
class ReadRequest::HasBitSetters {
 public:
  static void set_has_token(ReadRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_path(ReadRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_blockindex(ReadRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequest::kTokenFieldNumber;
const int ReadRequest::kPathFieldNumber;
const int ReadRequest::kBlockIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequest::ReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.ReadRequest)
}
ReadRequest::ReadRequest(const ReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  blockindex_ = from.blockindex_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.ReadRequest)
}

void ReadRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadRequest_OfsMaster_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blockindex_ = 0;
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:ofs.api.master.ReadRequest)
  SharedDtor();
}

void ReadRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadRequest& ReadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadRequest_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  blockindex_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.ReadRequest.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.ReadRequest.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 blockIndex = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_blockindex(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.ReadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.ReadRequest.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.ReadRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 blockIndex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_blockindex(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blockindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.ReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.ReadRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.ReadRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.ReadRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // required int32 blockIndex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->blockindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.ReadRequest)
}

::google::protobuf::uint8* ReadRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.ReadRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.ReadRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // required int32 blockIndex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->blockindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.ReadRequest)
  return target;
}

size_t ReadRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.ReadRequest)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_path()) {
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_blockindex()) {
    // required int32 blockIndex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blockindex());
  }

  return total_size;
}
size_t ReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.ReadRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required int32 blockIndex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blockindex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ReadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.ReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.ReadRequest)
    MergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000004u) {
      blockindex_ = from.blockindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ReadRequest::Swap(ReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequest::InternalSwap(ReadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(blockindex_, other->blockindex_);
}

::google::protobuf::Metadata ReadRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadResponse::InitAsDefaultInstance() {
}
class ReadResponse::HasBitSetters {
 public:
  static void set_has_errcode(ReadResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_id(ReadResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResponse::kErrCodeFieldNumber;
const int ReadResponse::kIdFieldNumber;
const int ReadResponse::kEpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResponse::ReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.ReadResponse)
}
ReadResponse::ReadResponse(const ReadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      eps_(from.eps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&id_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.ReadResponse)
}

void ReadResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadResponse_OfsMaster_2eproto.base);
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(errcode_));
}

ReadResponse::~ReadResponse() {
  // @@protoc_insertion_point(destructor:ofs.api.master.ReadResponse)
  SharedDtor();
}

void ReadResponse::SharedDtor() {
}

void ReadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadResponse& ReadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadResponse_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void ReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eps_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&errcode_) -
        reinterpret_cast<char*>(&id_)) + sizeof(errcode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::ofs::api::master::ErrorCode_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_errcode(static_cast<::ofs::api::master::ErrorCode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int64 id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .ofs.api.master.EndPoint eps = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ofs::api::master::EndPoint::_InternalParse;
          object = msg->add_eps();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.ReadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ofs::api::master::ErrorCode_IsValid(value)) {
            set_errcode(static_cast< ::ofs::api::master::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ofs.api.master.EndPoint eps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_eps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.ReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.ReadResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // optional int64 id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // repeated .ofs.api.master.EndPoint eps = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->eps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->eps(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.ReadResponse)
}

::google::protobuf::uint8* ReadResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // optional int64 id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // repeated .ofs.api.master.EndPoint eps = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->eps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->eps(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.ReadResponse)
  return target;
}

size_t ReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.ReadResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ofs.api.master.EndPoint eps = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->eps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->eps(static_cast<int>(i)));
    }
  }

  // optional int64 id = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ReadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.ReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.ReadResponse)
    MergeFrom(*source);
  }
}

void ReadResponse::MergeFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  eps_.MergeFrom(from.eps_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      errcode_ = from.errcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponse::CopyFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->eps())) return false;
  return true;
}

void ReadResponse::Swap(ReadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResponse::InternalSwap(ReadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&eps_)->InternalSwap(CastToBase(&other->eps_));
  swap(id_, other->id_);
  swap(errcode_, other->errcode_);
}

::google::protobuf::Metadata ReadResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BlockLease::InitAsDefaultInstance() {
  ::ofs::api::master::_BlockLease_default_instance_._instance.get_mutable()->ep_ = const_cast< ::ofs::api::master::EndPoint*>(
      ::ofs::api::master::EndPoint::internal_default_instance());
}
class BlockLease::HasBitSetters {
 public:
  static void set_has_id(BlockLease* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_until(BlockLease* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_version(BlockLease* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_newversion(BlockLease* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static const ::ofs::api::master::EndPoint& ep(const BlockLease* msg);
  static void set_has_ep(BlockLease* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_key(BlockLease* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::ofs::api::master::EndPoint&
BlockLease::HasBitSetters::ep(const BlockLease* msg) {
  return *msg->ep_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockLease::kIdFieldNumber;
const int BlockLease::kUntilFieldNumber;
const int BlockLease::kVersionFieldNumber;
const int BlockLease::kNewVersionFieldNumber;
const int BlockLease::kEpFieldNumber;
const int BlockLease::kChunkserversFieldNumber;
const int BlockLease::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockLease::BlockLease()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.BlockLease)
}
BlockLease::BlockLease(const BlockLease& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      chunkservers_(from.chunkservers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_ep()) {
    ep_ = new ::ofs::api::master::EndPoint(*from.ep_);
  } else {
    ep_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&newversion_) -
    reinterpret_cast<char*>(&id_)) + sizeof(newversion_));
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.BlockLease)
}

void BlockLease::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BlockLease_OfsMaster_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ep_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newversion_) -
      reinterpret_cast<char*>(&ep_)) + sizeof(newversion_));
}

BlockLease::~BlockLease() {
  // @@protoc_insertion_point(destructor:ofs.api.master.BlockLease)
  SharedDtor();
}

void BlockLease::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ep_;
}

void BlockLease::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BlockLease& BlockLease::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BlockLease_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void BlockLease::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.BlockLease)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunkservers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ep_ != nullptr);
      ep_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&newversion_) -
        reinterpret_cast<char*>(&id_)) + sizeof(newversion_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BlockLease::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BlockLease*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 until = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_until(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 version = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 newVersion = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_newversion(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required .ofs.api.master.EndPoint ep = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ofs::api::master::EndPoint::_InternalParse;
        object = msg->mutable_ep();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated int32 chunkservers = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) == 48) {
          do {
            msg->add_chunkservers(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 48 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
        object = msg->mutable_chunkservers();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // required string key = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.BlockLease.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BlockLease::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.BlockLease)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 until = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_until(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &until_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 newVersion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_newversion(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &newversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ofs.api.master.EndPoint ep = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ep()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 chunkservers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_chunkservers())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_chunkservers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string key = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.BlockLease.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.BlockLease)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.BlockLease)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BlockLease::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.BlockLease)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required int64 until = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->until(), output);
  }

  // required int64 version = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->version(), output);
  }

  // required int64 newVersion = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->newversion(), output);
  }

  // required .ofs.api.master.EndPoint ep = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::ep(this), output);
  }

  // repeated int32 chunkservers = 6;
  for (int i = 0, n = this->chunkservers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->chunkservers(i), output);
  }

  // required string key = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.BlockLease.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.BlockLease)
}

::google::protobuf::uint8* BlockLease::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.BlockLease)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required int64 until = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->until(), target);
  }

  // required int64 version = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->version(), target);
  }

  // required int64 newVersion = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->newversion(), target);
  }

  // required .ofs.api.master.EndPoint ep = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::ep(this), target);
  }

  // repeated int32 chunkservers = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(6, this->chunkservers_, target);

  // required string key = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.BlockLease.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.BlockLease)
  return target;
}

size_t BlockLease::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.BlockLease)
  size_t total_size = 0;

  if (has_key()) {
    // required string key = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_ep()) {
    // required .ofs.api.master.EndPoint ep = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ep_);
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_until()) {
    // required int64 until = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->until());
  }

  if (has_version()) {
    // required int64 version = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  if (has_newversion()) {
    // required int64 newVersion = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->newversion());
  }

  return total_size;
}
size_t BlockLease::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.BlockLease)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string key = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required .ofs.api.master.EndPoint ep = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ep_);

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int64 until = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->until());

    // required int64 version = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());

    // required int64 newVersion = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->newversion());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 chunkservers = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->chunkservers_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->chunkservers_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockLease::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.BlockLease)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockLease* source =
      ::google::protobuf::DynamicCastToGenerated<BlockLease>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.BlockLease)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.BlockLease)
    MergeFrom(*source);
  }
}

void BlockLease::MergeFrom(const BlockLease& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.BlockLease)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chunkservers_.MergeFrom(from.chunkservers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_ep()->::ofs::api::master::EndPoint::MergeFrom(from.ep());
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      until_ = from.until_;
    }
    if (cached_has_bits & 0x00000010u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000020u) {
      newversion_ = from.newversion_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BlockLease::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.BlockLease)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockLease::CopyFrom(const BlockLease& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.BlockLease)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockLease::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_ep()) {
    if (!this->ep_->IsInitialized()) return false;
  }
  return true;
}

void BlockLease::Swap(BlockLease* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockLease::InternalSwap(BlockLease* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  chunkservers_.InternalSwap(&other->chunkservers_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ep_, other->ep_);
  swap(id_, other->id_);
  swap(until_, other->until_);
  swap(version_, other->version_);
  swap(newversion_, other->newversion_);
}

::google::protobuf::Metadata BlockLease::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WriteRequest::InitAsDefaultInstance() {
}
class WriteRequest::HasBitSetters {
 public:
  static void set_has_token(WriteRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_path(WriteRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_blockindex(WriteRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequest::kTokenFieldNumber;
const int WriteRequest::kPathFieldNumber;
const int WriteRequest::kBlockIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequest::WriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.WriteRequest)
}
WriteRequest::WriteRequest(const WriteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  blockindex_ = from.blockindex_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.WriteRequest)
}

void WriteRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WriteRequest_OfsMaster_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blockindex_ = 0;
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:ofs.api.master.WriteRequest)
  SharedDtor();
}

void WriteRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteRequest& WriteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteRequest_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  blockindex_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WriteRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.WriteRequest.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.WriteRequest.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 blockIndex = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_blockindex(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.WriteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.WriteRequest.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.WriteRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 blockIndex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_blockindex(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blockindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.WriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.WriteRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.WriteRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.WriteRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // required int32 blockIndex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->blockindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.WriteRequest)
}

::google::protobuf::uint8* WriteRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.WriteRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.WriteRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // required int32 blockIndex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->blockindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.WriteRequest)
  return target;
}

size_t WriteRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.WriteRequest)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_path()) {
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_blockindex()) {
    // required int32 blockIndex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blockindex());
  }

  return total_size;
}
size_t WriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.WriteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required int32 blockIndex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blockindex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteRequest* source =
      ::google::protobuf::DynamicCastToGenerated<WriteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.WriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.WriteRequest)
    MergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000004u) {
      blockindex_ = from.blockindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void WriteRequest::Swap(WriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequest::InternalSwap(WriteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(blockindex_, other->blockindex_);
}

::google::protobuf::Metadata WriteRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WriteResponse::InitAsDefaultInstance() {
  ::ofs::api::master::_WriteResponse_default_instance_._instance.get_mutable()->lease_ = const_cast< ::ofs::api::master::BlockLease*>(
      ::ofs::api::master::BlockLease::internal_default_instance());
}
class WriteResponse::HasBitSetters {
 public:
  static void set_has_errcode(WriteResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::ofs::api::master::BlockLease& lease(const WriteResponse* msg);
  static void set_has_lease(WriteResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::ofs::api::master::BlockLease&
WriteResponse::HasBitSetters::lease(const WriteResponse* msg) {
  return *msg->lease_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteResponse::kErrCodeFieldNumber;
const int WriteResponse::kLeaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteResponse::WriteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.WriteResponse)
}
WriteResponse::WriteResponse(const WriteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lease()) {
    lease_ = new ::ofs::api::master::BlockLease(*from.lease_);
  } else {
    lease_ = nullptr;
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.WriteResponse)
}

void WriteResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WriteResponse_OfsMaster_2eproto.base);
  ::memset(&lease_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&lease_)) + sizeof(errcode_));
}

WriteResponse::~WriteResponse() {
  // @@protoc_insertion_point(destructor:ofs.api.master.WriteResponse)
  SharedDtor();
}

void WriteResponse::SharedDtor() {
  if (this != internal_default_instance()) delete lease_;
}

void WriteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteResponse& WriteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteResponse_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void WriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(lease_ != nullptr);
    lease_->Clear();
  }
  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WriteResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::ofs::api::master::ErrorCode_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_errcode(static_cast<::ofs::api::master::ErrorCode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required .ofs.api.master.BlockLease lease = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ofs::api::master::BlockLease::_InternalParse;
        object = msg->mutable_lease();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.WriteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ofs::api::master::ErrorCode_IsValid(value)) {
            set_errcode(static_cast< ::ofs::api::master::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ofs.api.master.BlockLease lease = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lease()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.WriteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.WriteResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // required .ofs.api.master.BlockLease lease = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::lease(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.WriteResponse)
}

::google::protobuf::uint8* WriteResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // required .ofs.api.master.BlockLease lease = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::lease(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.WriteResponse)
  return target;
}

size_t WriteResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.WriteResponse)
  size_t total_size = 0;

  if (has_lease()) {
    // required .ofs.api.master.BlockLease lease = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lease_);
  }

  if (has_errcode()) {
    // required .ofs.api.master.ErrorCode errCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  return total_size;
}
size_t WriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.WriteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ofs.api.master.BlockLease lease = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lease_);

    // required .ofs.api.master.ErrorCode errCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteResponse* source =
      ::google::protobuf::DynamicCastToGenerated<WriteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.WriteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.WriteResponse)
    MergeFrom(*source);
  }
}

void WriteResponse::MergeFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_lease()->::ofs::api::master::BlockLease::MergeFrom(from.lease());
    }
    if (cached_has_bits & 0x00000002u) {
      errcode_ = from.errcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WriteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteResponse::CopyFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_lease()) {
    if (!this->lease_->IsInitialized()) return false;
  }
  return true;
}

void WriteResponse::Swap(WriteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteResponse::InternalSwap(WriteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(lease_, other->lease_);
  swap(errcode_, other->errcode_);
}

::google::protobuf::Metadata WriteResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AppendRequest::InitAsDefaultInstance() {
}
class AppendRequest::HasBitSetters {
 public:
  static void set_has_token(AppendRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_path(AppendRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppendRequest::kTokenFieldNumber;
const int AppendRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppendRequest::AppendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.AppendRequest)
}
AppendRequest::AppendRequest(const AppendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.AppendRequest)
}

void AppendRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AppendRequest_OfsMaster_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AppendRequest::~AppendRequest() {
  // @@protoc_insertion_point(destructor:ofs.api.master.AppendRequest)
  SharedDtor();
}

void AppendRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppendRequest& AppendRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AppendRequest_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void AppendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.AppendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AppendRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AppendRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.AppendRequest.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ofs.api.master.AppendRequest.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AppendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.AppendRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.AppendRequest.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ofs.api.master.AppendRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.AppendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.AppendRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AppendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.AppendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.AppendRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.AppendRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.AppendRequest)
}

::google::protobuf::uint8* AppendRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.AppendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.AppendRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ofs.api.master.AppendRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.AppendRequest)
  return target;
}

size_t AppendRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.AppendRequest)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_path()) {
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  return total_size;
}
size_t AppendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.AppendRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.AppendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AppendRequest* source =
      ::google::protobuf::DynamicCastToGenerated<AppendRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.AppendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.AppendRequest)
    MergeFrom(*source);
  }
}

void AppendRequest::MergeFrom(const AppendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.AppendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
  }
}

void AppendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.AppendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendRequest::CopyFrom(const AppendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.AppendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AppendRequest::Swap(AppendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppendRequest::InternalSwap(AppendRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AppendRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AppendResponse::InitAsDefaultInstance() {
  ::ofs::api::master::_AppendResponse_default_instance_._instance.get_mutable()->lease_ = const_cast< ::ofs::api::master::BlockLease*>(
      ::ofs::api::master::BlockLease::internal_default_instance());
}
class AppendResponse::HasBitSetters {
 public:
  static void set_has_errcode(AppendResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::ofs::api::master::BlockLease& lease(const AppendResponse* msg);
  static void set_has_lease(AppendResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::ofs::api::master::BlockLease&
AppendResponse::HasBitSetters::lease(const AppendResponse* msg) {
  return *msg->lease_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppendResponse::kErrCodeFieldNumber;
const int AppendResponse::kLeaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppendResponse::AppendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ofs.api.master.AppendResponse)
}
AppendResponse::AppendResponse(const AppendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lease()) {
    lease_ = new ::ofs::api::master::BlockLease(*from.lease_);
  } else {
    lease_ = nullptr;
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:ofs.api.master.AppendResponse)
}

void AppendResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AppendResponse_OfsMaster_2eproto.base);
  ::memset(&lease_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&lease_)) + sizeof(errcode_));
}

AppendResponse::~AppendResponse() {
  // @@protoc_insertion_point(destructor:ofs.api.master.AppendResponse)
  SharedDtor();
}

void AppendResponse::SharedDtor() {
  if (this != internal_default_instance()) delete lease_;
}

void AppendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppendResponse& AppendResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AppendResponse_OfsMaster_2eproto.base);
  return *internal_default_instance();
}


void AppendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ofs.api.master.AppendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(lease_ != nullptr);
    lease_->Clear();
  }
  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AppendResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AppendResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::ofs::api::master::ErrorCode_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_errcode(static_cast<::ofs::api::master::ErrorCode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required .ofs.api.master.BlockLease lease = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ofs::api::master::BlockLease::_InternalParse;
        object = msg->mutable_lease();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AppendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ofs.api.master.AppendResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ofs.api.master.ErrorCode errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ofs::api::master::ErrorCode_IsValid(value)) {
            set_errcode(static_cast< ::ofs::api::master::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ofs.api.master.BlockLease lease = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lease()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ofs.api.master.AppendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ofs.api.master.AppendResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AppendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ofs.api.master.AppendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // required .ofs.api.master.BlockLease lease = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::lease(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ofs.api.master.AppendResponse)
}

::google::protobuf::uint8* AppendResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ofs.api.master.AppendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ofs.api.master.ErrorCode errCode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // required .ofs.api.master.BlockLease lease = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::lease(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ofs.api.master.AppendResponse)
  return target;
}

size_t AppendResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ofs.api.master.AppendResponse)
  size_t total_size = 0;

  if (has_lease()) {
    // required .ofs.api.master.BlockLease lease = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lease_);
  }

  if (has_errcode()) {
    // required .ofs.api.master.ErrorCode errCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  return total_size;
}
size_t AppendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ofs.api.master.AppendResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ofs.api.master.BlockLease lease = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lease_);

    // required .ofs.api.master.ErrorCode errCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ofs.api.master.AppendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AppendResponse* source =
      ::google::protobuf::DynamicCastToGenerated<AppendResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ofs.api.master.AppendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ofs.api.master.AppendResponse)
    MergeFrom(*source);
  }
}

void AppendResponse::MergeFrom(const AppendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ofs.api.master.AppendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_lease()->::ofs::api::master::BlockLease::MergeFrom(from.lease());
    }
    if (cached_has_bits & 0x00000002u) {
      errcode_ = from.errcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ofs.api.master.AppendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendResponse::CopyFrom(const AppendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ofs.api.master.AppendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_lease()) {
    if (!this->lease_->IsInitialized()) return false;
  }
  return true;
}

void AppendResponse::Swap(AppendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppendResponse::InternalSwap(AppendResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(lease_, other->lease_);
  swap(errcode_, other->errcode_);
}

::google::protobuf::Metadata AppendResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfsMaster_2eproto);
  return ::file_level_metadata_OfsMaster_2eproto[kIndexInFileMessages];
}


// ===================================================================

OfsFileService::~OfsFileService() {}

const ::google::protobuf::ServiceDescriptor* OfsFileService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OfsMaster_2eproto);
  return file_level_service_descriptors_OfsMaster_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* OfsFileService::GetDescriptor() {
  return descriptor();
}

void OfsFileService::Login(::google::protobuf::RpcController* controller,
                         const ::ofs::api::master::LoginReq*,
                         ::ofs::api::master::LoginResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Login() not implemented.");
  done->Run();
}

void OfsFileService::MakeDir(::google::protobuf::RpcController* controller,
                         const ::ofs::api::master::MakeDirRequest*,
                         ::ofs::api::master::MakeDirResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method MakeDir() not implemented.");
  done->Run();
}

void OfsFileService::Create(::google::protobuf::RpcController* controller,
                         const ::ofs::api::master::CreateFileRequest*,
                         ::ofs::api::master::CreateFileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Create() not implemented.");
  done->Run();
}

void OfsFileService::List(::google::protobuf::RpcController* controller,
                         const ::ofs::api::master::ListRequest*,
                         ::ofs::api::master::ListResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method List() not implemented.");
  done->Run();
}

void OfsFileService::Remove(::google::protobuf::RpcController* controller,
                         const ::ofs::api::master::RemoveRequest*,
                         ::ofs::api::master::RemoveResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Remove() not implemented.");
  done->Run();
}

void OfsFileService::Status(::google::protobuf::RpcController* controller,
                         const ::ofs::api::master::FileStatusRequest*,
                         ::ofs::api::master::FileStatusRespone*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Status() not implemented.");
  done->Run();
}

void OfsFileService::Read(::google::protobuf::RpcController* controller,
                         const ::ofs::api::master::ReadRequest*,
                         ::ofs::api::master::ReadResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Read() not implemented.");
  done->Run();
}

void OfsFileService::Write(::google::protobuf::RpcController* controller,
                         const ::ofs::api::master::WriteRequest*,
                         ::ofs::api::master::WriteResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Write() not implemented.");
  done->Run();
}

void OfsFileService::Append(::google::protobuf::RpcController* controller,
                         const ::ofs::api::master::AppendRequest*,
                         ::ofs::api::master::AppendResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Append() not implemented.");
  done->Run();
}

void OfsFileService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_OfsMaster_2eproto[0]);
  switch(method->index()) {
    case 0:
      Login(controller,
             ::google::protobuf::down_cast<const ::ofs::api::master::LoginReq*>(request),
             ::google::protobuf::down_cast< ::ofs::api::master::LoginResponse*>(response),
             done);
      break;
    case 1:
      MakeDir(controller,
             ::google::protobuf::down_cast<const ::ofs::api::master::MakeDirRequest*>(request),
             ::google::protobuf::down_cast< ::ofs::api::master::MakeDirResponse*>(response),
             done);
      break;
    case 2:
      Create(controller,
             ::google::protobuf::down_cast<const ::ofs::api::master::CreateFileRequest*>(request),
             ::google::protobuf::down_cast< ::ofs::api::master::CreateFileResponse*>(response),
             done);
      break;
    case 3:
      List(controller,
             ::google::protobuf::down_cast<const ::ofs::api::master::ListRequest*>(request),
             ::google::protobuf::down_cast< ::ofs::api::master::ListResponse*>(response),
             done);
      break;
    case 4:
      Remove(controller,
             ::google::protobuf::down_cast<const ::ofs::api::master::RemoveRequest*>(request),
             ::google::protobuf::down_cast< ::ofs::api::master::RemoveResponse*>(response),
             done);
      break;
    case 5:
      Status(controller,
             ::google::protobuf::down_cast<const ::ofs::api::master::FileStatusRequest*>(request),
             ::google::protobuf::down_cast< ::ofs::api::master::FileStatusRespone*>(response),
             done);
      break;
    case 6:
      Read(controller,
             ::google::protobuf::down_cast<const ::ofs::api::master::ReadRequest*>(request),
             ::google::protobuf::down_cast< ::ofs::api::master::ReadResponse*>(response),
             done);
      break;
    case 7:
      Write(controller,
             ::google::protobuf::down_cast<const ::ofs::api::master::WriteRequest*>(request),
             ::google::protobuf::down_cast< ::ofs::api::master::WriteResponse*>(response),
             done);
      break;
    case 8:
      Append(controller,
             ::google::protobuf::down_cast<const ::ofs::api::master::AppendRequest*>(request),
             ::google::protobuf::down_cast< ::ofs::api::master::AppendResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& OfsFileService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::ofs::api::master::LoginReq::default_instance();
    case 1:
      return ::ofs::api::master::MakeDirRequest::default_instance();
    case 2:
      return ::ofs::api::master::CreateFileRequest::default_instance();
    case 3:
      return ::ofs::api::master::ListRequest::default_instance();
    case 4:
      return ::ofs::api::master::RemoveRequest::default_instance();
    case 5:
      return ::ofs::api::master::FileStatusRequest::default_instance();
    case 6:
      return ::ofs::api::master::ReadRequest::default_instance();
    case 7:
      return ::ofs::api::master::WriteRequest::default_instance();
    case 8:
      return ::ofs::api::master::AppendRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& OfsFileService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::ofs::api::master::LoginResponse::default_instance();
    case 1:
      return ::ofs::api::master::MakeDirResponse::default_instance();
    case 2:
      return ::ofs::api::master::CreateFileResponse::default_instance();
    case 3:
      return ::ofs::api::master::ListResponse::default_instance();
    case 4:
      return ::ofs::api::master::RemoveResponse::default_instance();
    case 5:
      return ::ofs::api::master::FileStatusRespone::default_instance();
    case 6:
      return ::ofs::api::master::ReadResponse::default_instance();
    case 7:
      return ::ofs::api::master::WriteResponse::default_instance();
    case 8:
      return ::ofs::api::master::AppendResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

OfsFileService_Stub::OfsFileService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
OfsFileService_Stub::OfsFileService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
OfsFileService_Stub::~OfsFileService_Stub() {
  if (owns_channel_) delete channel_;
}

void OfsFileService_Stub::Login(::google::protobuf::RpcController* controller,
                              const ::ofs::api::master::LoginReq* request,
                              ::ofs::api::master::LoginResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void OfsFileService_Stub::MakeDir(::google::protobuf::RpcController* controller,
                              const ::ofs::api::master::MakeDirRequest* request,
                              ::ofs::api::master::MakeDirResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void OfsFileService_Stub::Create(::google::protobuf::RpcController* controller,
                              const ::ofs::api::master::CreateFileRequest* request,
                              ::ofs::api::master::CreateFileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void OfsFileService_Stub::List(::google::protobuf::RpcController* controller,
                              const ::ofs::api::master::ListRequest* request,
                              ::ofs::api::master::ListResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void OfsFileService_Stub::Remove(::google::protobuf::RpcController* controller,
                              const ::ofs::api::master::RemoveRequest* request,
                              ::ofs::api::master::RemoveResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void OfsFileService_Stub::Status(::google::protobuf::RpcController* controller,
                              const ::ofs::api::master::FileStatusRequest* request,
                              ::ofs::api::master::FileStatusRespone* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void OfsFileService_Stub::Read(::google::protobuf::RpcController* controller,
                              const ::ofs::api::master::ReadRequest* request,
                              ::ofs::api::master::ReadResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void OfsFileService_Stub::Write(::google::protobuf::RpcController* controller,
                              const ::ofs::api::master::WriteRequest* request,
                              ::ofs::api::master::WriteResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void OfsFileService_Stub::Append(::google::protobuf::RpcController* controller,
                              const ::ofs::api::master::AppendRequest* request,
                              ::ofs::api::master::AppendResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace master
}  // namespace api
}  // namespace ofs
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ofs::api::master::LoginReq* Arena::CreateMaybeMessage< ::ofs::api::master::LoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::LoginReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::LoginResponse* Arena::CreateMaybeMessage< ::ofs::api::master::LoginResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::LoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::MakeDirRequest* Arena::CreateMaybeMessage< ::ofs::api::master::MakeDirRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::MakeDirRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::MakeDirResponse* Arena::CreateMaybeMessage< ::ofs::api::master::MakeDirResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::MakeDirResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::CreateFileRequest* Arena::CreateMaybeMessage< ::ofs::api::master::CreateFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::CreateFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::CreateFileResponse* Arena::CreateMaybeMessage< ::ofs::api::master::CreateFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::CreateFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::ListRequest* Arena::CreateMaybeMessage< ::ofs::api::master::ListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::ListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::File* Arena::CreateMaybeMessage< ::ofs::api::master::File >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::File >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::ListResponse* Arena::CreateMaybeMessage< ::ofs::api::master::ListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::ListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::RemoveRequest* Arena::CreateMaybeMessage< ::ofs::api::master::RemoveRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::RemoveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::RemoveResponse* Arena::CreateMaybeMessage< ::ofs::api::master::RemoveResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::RemoveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::FileStatusRequest* Arena::CreateMaybeMessage< ::ofs::api::master::FileStatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::FileStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::FileStatusRespone* Arena::CreateMaybeMessage< ::ofs::api::master::FileStatusRespone >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::FileStatusRespone >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::EndPoint* Arena::CreateMaybeMessage< ::ofs::api::master::EndPoint >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::EndPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::ReadRequest* Arena::CreateMaybeMessage< ::ofs::api::master::ReadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::ReadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::ReadResponse* Arena::CreateMaybeMessage< ::ofs::api::master::ReadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::ReadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::BlockLease* Arena::CreateMaybeMessage< ::ofs::api::master::BlockLease >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::BlockLease >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::WriteRequest* Arena::CreateMaybeMessage< ::ofs::api::master::WriteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::WriteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::WriteResponse* Arena::CreateMaybeMessage< ::ofs::api::master::WriteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::WriteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::AppendRequest* Arena::CreateMaybeMessage< ::ofs::api::master::AppendRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::AppendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ofs::api::master::AppendResponse* Arena::CreateMaybeMessage< ::ofs::api::master::AppendResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ofs::api::master::AppendResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
