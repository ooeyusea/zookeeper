// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OfsMaster.proto

#ifndef PROTOBUF_INCLUDED_OfsMaster_2eproto
#define PROTOBUF_INCLUDED_OfsMaster_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_OfsMaster_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_OfsMaster_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[21]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_OfsMaster_2eproto();
namespace ofs {
namespace api {
namespace master {
class AppendRequest;
class AppendRequestDefaultTypeInternal;
extern AppendRequestDefaultTypeInternal _AppendRequest_default_instance_;
class AppendResponse;
class AppendResponseDefaultTypeInternal;
extern AppendResponseDefaultTypeInternal _AppendResponse_default_instance_;
class BlockLease;
class BlockLeaseDefaultTypeInternal;
extern BlockLeaseDefaultTypeInternal _BlockLease_default_instance_;
class CreateFileRequest;
class CreateFileRequestDefaultTypeInternal;
extern CreateFileRequestDefaultTypeInternal _CreateFileRequest_default_instance_;
class CreateFileResponse;
class CreateFileResponseDefaultTypeInternal;
extern CreateFileResponseDefaultTypeInternal _CreateFileResponse_default_instance_;
class EndPoint;
class EndPointDefaultTypeInternal;
extern EndPointDefaultTypeInternal _EndPoint_default_instance_;
class File;
class FileDefaultTypeInternal;
extern FileDefaultTypeInternal _File_default_instance_;
class FileStatusRequest;
class FileStatusRequestDefaultTypeInternal;
extern FileStatusRequestDefaultTypeInternal _FileStatusRequest_default_instance_;
class FileStatusRespone;
class FileStatusResponeDefaultTypeInternal;
extern FileStatusResponeDefaultTypeInternal _FileStatusRespone_default_instance_;
class ListRequest;
class ListRequestDefaultTypeInternal;
extern ListRequestDefaultTypeInternal _ListRequest_default_instance_;
class ListResponse;
class ListResponseDefaultTypeInternal;
extern ListResponseDefaultTypeInternal _ListResponse_default_instance_;
class LoginReq;
class LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class LoginResponse;
class LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class MakeDirRequest;
class MakeDirRequestDefaultTypeInternal;
extern MakeDirRequestDefaultTypeInternal _MakeDirRequest_default_instance_;
class MakeDirResponse;
class MakeDirResponseDefaultTypeInternal;
extern MakeDirResponseDefaultTypeInternal _MakeDirResponse_default_instance_;
class ReadRequest;
class ReadRequestDefaultTypeInternal;
extern ReadRequestDefaultTypeInternal _ReadRequest_default_instance_;
class ReadResponse;
class ReadResponseDefaultTypeInternal;
extern ReadResponseDefaultTypeInternal _ReadResponse_default_instance_;
class RemoveRequest;
class RemoveRequestDefaultTypeInternal;
extern RemoveRequestDefaultTypeInternal _RemoveRequest_default_instance_;
class RemoveResponse;
class RemoveResponseDefaultTypeInternal;
extern RemoveResponseDefaultTypeInternal _RemoveResponse_default_instance_;
class WriteRequest;
class WriteRequestDefaultTypeInternal;
extern WriteRequestDefaultTypeInternal _WriteRequest_default_instance_;
class WriteResponse;
class WriteResponseDefaultTypeInternal;
extern WriteResponseDefaultTypeInternal _WriteResponse_default_instance_;
}  // namespace master
}  // namespace api
}  // namespace ofs
namespace google {
namespace protobuf {
template<> ::ofs::api::master::AppendRequest* Arena::CreateMaybeMessage<::ofs::api::master::AppendRequest>(Arena*);
template<> ::ofs::api::master::AppendResponse* Arena::CreateMaybeMessage<::ofs::api::master::AppendResponse>(Arena*);
template<> ::ofs::api::master::BlockLease* Arena::CreateMaybeMessage<::ofs::api::master::BlockLease>(Arena*);
template<> ::ofs::api::master::CreateFileRequest* Arena::CreateMaybeMessage<::ofs::api::master::CreateFileRequest>(Arena*);
template<> ::ofs::api::master::CreateFileResponse* Arena::CreateMaybeMessage<::ofs::api::master::CreateFileResponse>(Arena*);
template<> ::ofs::api::master::EndPoint* Arena::CreateMaybeMessage<::ofs::api::master::EndPoint>(Arena*);
template<> ::ofs::api::master::File* Arena::CreateMaybeMessage<::ofs::api::master::File>(Arena*);
template<> ::ofs::api::master::FileStatusRequest* Arena::CreateMaybeMessage<::ofs::api::master::FileStatusRequest>(Arena*);
template<> ::ofs::api::master::FileStatusRespone* Arena::CreateMaybeMessage<::ofs::api::master::FileStatusRespone>(Arena*);
template<> ::ofs::api::master::ListRequest* Arena::CreateMaybeMessage<::ofs::api::master::ListRequest>(Arena*);
template<> ::ofs::api::master::ListResponse* Arena::CreateMaybeMessage<::ofs::api::master::ListResponse>(Arena*);
template<> ::ofs::api::master::LoginReq* Arena::CreateMaybeMessage<::ofs::api::master::LoginReq>(Arena*);
template<> ::ofs::api::master::LoginResponse* Arena::CreateMaybeMessage<::ofs::api::master::LoginResponse>(Arena*);
template<> ::ofs::api::master::MakeDirRequest* Arena::CreateMaybeMessage<::ofs::api::master::MakeDirRequest>(Arena*);
template<> ::ofs::api::master::MakeDirResponse* Arena::CreateMaybeMessage<::ofs::api::master::MakeDirResponse>(Arena*);
template<> ::ofs::api::master::ReadRequest* Arena::CreateMaybeMessage<::ofs::api::master::ReadRequest>(Arena*);
template<> ::ofs::api::master::ReadResponse* Arena::CreateMaybeMessage<::ofs::api::master::ReadResponse>(Arena*);
template<> ::ofs::api::master::RemoveRequest* Arena::CreateMaybeMessage<::ofs::api::master::RemoveRequest>(Arena*);
template<> ::ofs::api::master::RemoveResponse* Arena::CreateMaybeMessage<::ofs::api::master::RemoveResponse>(Arena*);
template<> ::ofs::api::master::WriteRequest* Arena::CreateMaybeMessage<::ofs::api::master::WriteRequest>(Arena*);
template<> ::ofs::api::master::WriteResponse* Arena::CreateMaybeMessage<::ofs::api::master::WriteResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ofs {
namespace api {
namespace master {

enum ErrorCode {
  EC_NONE = 0,
  EC_FILE_NOT_EIXST = 1,
  EC_FILE_EIXST = 2,
  EC_PERMISSION_DENY = 3,
  EC_DIR_NOT_EMPTY = 4,
  EC_AUTHORITY_EXPIRE = 5,
  EC_IS_DIR = 6,
  EC_USER_OR_PASSWORD_ERROR = 7,
  EC_USER_EXPIRE = 8,
  EC_IS_NOT_DIRECTORY = 9,
  EC_ALREADY_EXIST_DELETE_FILE = 10,
  EC_OUT_OF_RANGE = 11,
  EC_BLOCK_NOT_READY = 12,
  EC_BLOCK_MISSING = 13
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = EC_NONE;
const ErrorCode ErrorCode_MAX = EC_BLOCK_MISSING;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
enum AuthorityType {
  AT_OWNER_READ = 1,
  AT_OWNER_WRITE = 2,
  AT_OWNER_EXECUTE = 4,
  AT_GROUP_READ = 8,
  AT_GROUP_WRITE = 16,
  AT_GROUP_EXECUTE = 32,
  AT_OTHER_READ = 64,
  AT_OTHER_WRITE = 128,
  AT_OTHER_EXECUTE = 256
};
bool AuthorityType_IsValid(int value);
const AuthorityType AuthorityType_MIN = AT_OWNER_READ;
const AuthorityType AuthorityType_MAX = AT_OTHER_EXECUTE;
const int AuthorityType_ARRAYSIZE = AuthorityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuthorityType_descriptor();
inline const ::std::string& AuthorityType_Name(AuthorityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuthorityType_descriptor(), value);
}
inline bool AuthorityType_Parse(
    const ::std::string& name, AuthorityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuthorityType>(
    AuthorityType_descriptor(), name, value);
}
// ===================================================================

class LoginReq :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginReq(LoginReq&& from) noexcept
    : LoginReq() {
    *this = ::std::move(from);
  }

  inline LoginReq& operator=(LoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LoginReq* other);
  friend void swap(LoginReq& a, LoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginReq* New() const final {
    return CreateMaybeMessage<LoginReq>(nullptr);
  }

  LoginReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:ofs.api.master.LoginReq)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class LoginResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginResponse(LoginResponse&& from) noexcept
    : LoginResponse() {
    *this = ::std::move(from);
  }

  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LoginResponse* other);
  friend void swap(LoginResponse& a, LoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const final {
    return CreateMaybeMessage<LoginResponse>(nullptr);
  }

  LoginResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required .ofs.api.master.ErrorCode errCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::ofs::api::master::ErrorCode errcode() const;
  void set_errcode(::ofs::api::master::ErrorCode value);

  // optional int32 blockSize = 3;
  bool has_blocksize() const;
  void clear_blocksize();
  static const int kBlockSizeFieldNumber = 3;
  ::google::protobuf::int32 blocksize() const;
  void set_blocksize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.LoginResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  int errcode_;
  ::google::protobuf::int32 blocksize_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class MakeDirRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.MakeDirRequest) */ {
 public:
  MakeDirRequest();
  virtual ~MakeDirRequest();

  MakeDirRequest(const MakeDirRequest& from);

  inline MakeDirRequest& operator=(const MakeDirRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MakeDirRequest(MakeDirRequest&& from) noexcept
    : MakeDirRequest() {
    *this = ::std::move(from);
  }

  inline MakeDirRequest& operator=(MakeDirRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MakeDirRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MakeDirRequest* internal_default_instance() {
    return reinterpret_cast<const MakeDirRequest*>(
               &_MakeDirRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MakeDirRequest* other);
  friend void swap(MakeDirRequest& a, MakeDirRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MakeDirRequest* New() const final {
    return CreateMaybeMessage<MakeDirRequest>(nullptr);
  }

  MakeDirRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MakeDirRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MakeDirRequest& from);
  void MergeFrom(const MakeDirRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MakeDirRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string directory = 3;
  bool has_directory() const;
  void clear_directory();
  static const int kDirectoryFieldNumber = 3;
  const ::std::string& directory() const;
  void set_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_directory(::std::string&& value);
  #endif
  void set_directory(const char* value);
  void set_directory(const char* value, size_t size);
  ::std::string* mutable_directory();
  ::std::string* release_directory();
  void set_allocated_directory(::std::string* directory);

  // required string name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 authority = 2;
  bool has_authority() const;
  void clear_authority();
  static const int kAuthorityFieldNumber = 2;
  ::google::protobuf::int32 authority() const;
  void set_authority(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.MakeDirRequest)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr directory_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 authority_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class MakeDirResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.MakeDirResponse) */ {
 public:
  MakeDirResponse();
  virtual ~MakeDirResponse();

  MakeDirResponse(const MakeDirResponse& from);

  inline MakeDirResponse& operator=(const MakeDirResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MakeDirResponse(MakeDirResponse&& from) noexcept
    : MakeDirResponse() {
    *this = ::std::move(from);
  }

  inline MakeDirResponse& operator=(MakeDirResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MakeDirResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MakeDirResponse* internal_default_instance() {
    return reinterpret_cast<const MakeDirResponse*>(
               &_MakeDirResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MakeDirResponse* other);
  friend void swap(MakeDirResponse& a, MakeDirResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MakeDirResponse* New() const final {
    return CreateMaybeMessage<MakeDirResponse>(nullptr);
  }

  MakeDirResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MakeDirResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MakeDirResponse& from);
  void MergeFrom(const MakeDirResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MakeDirResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ofs.api.master.ErrorCode errCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::ofs::api::master::ErrorCode errcode() const;
  void set_errcode(::ofs::api::master::ErrorCode value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.MakeDirResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int errcode_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class CreateFileRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.CreateFileRequest) */ {
 public:
  CreateFileRequest();
  virtual ~CreateFileRequest();

  CreateFileRequest(const CreateFileRequest& from);

  inline CreateFileRequest& operator=(const CreateFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateFileRequest(CreateFileRequest&& from) noexcept
    : CreateFileRequest() {
    *this = ::std::move(from);
  }

  inline CreateFileRequest& operator=(CreateFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateFileRequest* internal_default_instance() {
    return reinterpret_cast<const CreateFileRequest*>(
               &_CreateFileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CreateFileRequest* other);
  friend void swap(CreateFileRequest& a, CreateFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateFileRequest* New() const final {
    return CreateMaybeMessage<CreateFileRequest>(nullptr);
  }

  CreateFileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateFileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateFileRequest& from);
  void MergeFrom(const CreateFileRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string directory = 3;
  bool has_directory() const;
  void clear_directory();
  static const int kDirectoryFieldNumber = 3;
  const ::std::string& directory() const;
  void set_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_directory(::std::string&& value);
  #endif
  void set_directory(const char* value);
  void set_directory(const char* value, size_t size);
  ::std::string* mutable_directory();
  ::std::string* release_directory();
  void set_allocated_directory(::std::string* directory);

  // required string name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 authority = 2;
  bool has_authority() const;
  void clear_authority();
  static const int kAuthorityFieldNumber = 2;
  ::google::protobuf::int32 authority() const;
  void set_authority(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.CreateFileRequest)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr directory_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 authority_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class CreateFileResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.CreateFileResponse) */ {
 public:
  CreateFileResponse();
  virtual ~CreateFileResponse();

  CreateFileResponse(const CreateFileResponse& from);

  inline CreateFileResponse& operator=(const CreateFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateFileResponse(CreateFileResponse&& from) noexcept
    : CreateFileResponse() {
    *this = ::std::move(from);
  }

  inline CreateFileResponse& operator=(CreateFileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateFileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateFileResponse* internal_default_instance() {
    return reinterpret_cast<const CreateFileResponse*>(
               &_CreateFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CreateFileResponse* other);
  friend void swap(CreateFileResponse& a, CreateFileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateFileResponse* New() const final {
    return CreateMaybeMessage<CreateFileResponse>(nullptr);
  }

  CreateFileResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateFileResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateFileResponse& from);
  void MergeFrom(const CreateFileResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateFileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ofs.api.master.ErrorCode errCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::ofs::api::master::ErrorCode errcode() const;
  void set_errcode(::ofs::api::master::ErrorCode value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.CreateFileResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int errcode_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class ListRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.ListRequest) */ {
 public:
  ListRequest();
  virtual ~ListRequest();

  ListRequest(const ListRequest& from);

  inline ListRequest& operator=(const ListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListRequest(ListRequest&& from) noexcept
    : ListRequest() {
    *this = ::std::move(from);
  }

  inline ListRequest& operator=(ListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListRequest* internal_default_instance() {
    return reinterpret_cast<const ListRequest*>(
               &_ListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ListRequest* other);
  friend void swap(ListRequest& a, ListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListRequest* New() const final {
    return CreateMaybeMessage<ListRequest>(nullptr);
  }

  ListRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListRequest& from);
  void MergeFrom(const ListRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:ofs.api.master.ListRequest)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class File :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.File) */ {
 public:
  File();
  virtual ~File();

  File(const File& from);

  inline File& operator=(const File& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  File(File&& from) noexcept
    : File() {
    *this = ::std::move(from);
  }

  inline File& operator=(File&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const File& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const File* internal_default_instance() {
    return reinterpret_cast<const File*>(
               &_File_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(File* other);
  friend void swap(File& a, File& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline File* New() const final {
    return CreateMaybeMessage<File>(nullptr);
  }

  File* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<File>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const File& from);
  void MergeFrom(const File& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(File* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string owner = 2;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 2;
  const ::std::string& owner() const;
  void set_owner(const ::std::string& value);
  #if LANG_CXX11
  void set_owner(::std::string&& value);
  #endif
  void set_owner(const char* value);
  void set_owner(const char* value, size_t size);
  ::std::string* mutable_owner();
  ::std::string* release_owner();
  void set_allocated_owner(::std::string* owner);

  // required string group = 3;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 3;
  const ::std::string& group() const;
  void set_group(const ::std::string& value);
  #if LANG_CXX11
  void set_group(::std::string&& value);
  #endif
  void set_group(const char* value);
  void set_group(const char* value, size_t size);
  ::std::string* mutable_group();
  ::std::string* release_group();
  void set_allocated_group(::std::string* group);

  // required int32 authority = 4;
  bool has_authority() const;
  void clear_authority();
  static const int kAuthorityFieldNumber = 4;
  ::google::protobuf::int32 authority() const;
  void set_authority(::google::protobuf::int32 value);

  // required int32 size = 5;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 5;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // required int64 createTime = 7;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 7;
  ::google::protobuf::int64 createtime() const;
  void set_createtime(::google::protobuf::int64 value);

  // required int32 blockSize = 6;
  bool has_blocksize() const;
  void clear_blocksize();
  static const int kBlockSizeFieldNumber = 6;
  ::google::protobuf::int32 blocksize() const;
  void set_blocksize(::google::protobuf::int32 value);

  // required bool dir = 9;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 9;
  bool dir() const;
  void set_dir(bool value);

  // required int64 updateTime = 8;
  bool has_updatetime() const;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 8;
  ::google::protobuf::int64 updatetime() const;
  void set_updatetime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.File)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr owner_;
  ::google::protobuf::internal::ArenaStringPtr group_;
  ::google::protobuf::int32 authority_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int32 blocksize_;
  bool dir_;
  ::google::protobuf::int64 updatetime_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class ListResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.ListResponse) */ {
 public:
  ListResponse();
  virtual ~ListResponse();

  ListResponse(const ListResponse& from);

  inline ListResponse& operator=(const ListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListResponse(ListResponse&& from) noexcept
    : ListResponse() {
    *this = ::std::move(from);
  }

  inline ListResponse& operator=(ListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListResponse* internal_default_instance() {
    return reinterpret_cast<const ListResponse*>(
               &_ListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ListResponse* other);
  friend void swap(ListResponse& a, ListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListResponse* New() const final {
    return CreateMaybeMessage<ListResponse>(nullptr);
  }

  ListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListResponse& from);
  void MergeFrom(const ListResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ofs.api.master.File files = 2;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 2;
  ::ofs::api::master::File* mutable_files(int index);
  ::google::protobuf::RepeatedPtrField< ::ofs::api::master::File >*
      mutable_files();
  const ::ofs::api::master::File& files(int index) const;
  ::ofs::api::master::File* add_files();
  const ::google::protobuf::RepeatedPtrField< ::ofs::api::master::File >&
      files() const;

  // required .ofs.api.master.ErrorCode errCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::ofs::api::master::ErrorCode errcode() const;
  void set_errcode(::ofs::api::master::ErrorCode value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.ListResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ofs::api::master::File > files_;
  int errcode_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class RemoveRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.RemoveRequest) */ {
 public:
  RemoveRequest();
  virtual ~RemoveRequest();

  RemoveRequest(const RemoveRequest& from);

  inline RemoveRequest& operator=(const RemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveRequest(RemoveRequest&& from) noexcept
    : RemoveRequest() {
    *this = ::std::move(from);
  }

  inline RemoveRequest& operator=(RemoveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RemoveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveRequest*>(
               &_RemoveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(RemoveRequest* other);
  friend void swap(RemoveRequest& a, RemoveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveRequest* New() const final {
    return CreateMaybeMessage<RemoveRequest>(nullptr);
  }

  RemoveRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoveRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoveRequest& from);
  void MergeFrom(const RemoveRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:ofs.api.master.RemoveRequest)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class RemoveResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.RemoveResponse) */ {
 public:
  RemoveResponse();
  virtual ~RemoveResponse();

  RemoveResponse(const RemoveResponse& from);

  inline RemoveResponse& operator=(const RemoveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveResponse(RemoveResponse&& from) noexcept
    : RemoveResponse() {
    *this = ::std::move(from);
  }

  inline RemoveResponse& operator=(RemoveResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RemoveResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveResponse*>(
               &_RemoveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(RemoveResponse* other);
  friend void swap(RemoveResponse& a, RemoveResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveResponse* New() const final {
    return CreateMaybeMessage<RemoveResponse>(nullptr);
  }

  RemoveResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoveResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoveResponse& from);
  void MergeFrom(const RemoveResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ofs.api.master.ErrorCode errCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::ofs::api::master::ErrorCode errcode() const;
  void set_errcode(::ofs::api::master::ErrorCode value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.RemoveResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int errcode_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class FileStatusRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.FileStatusRequest) */ {
 public:
  FileStatusRequest();
  virtual ~FileStatusRequest();

  FileStatusRequest(const FileStatusRequest& from);

  inline FileStatusRequest& operator=(const FileStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileStatusRequest(FileStatusRequest&& from) noexcept
    : FileStatusRequest() {
    *this = ::std::move(from);
  }

  inline FileStatusRequest& operator=(FileStatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FileStatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileStatusRequest* internal_default_instance() {
    return reinterpret_cast<const FileStatusRequest*>(
               &_FileStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(FileStatusRequest* other);
  friend void swap(FileStatusRequest& a, FileStatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileStatusRequest* New() const final {
    return CreateMaybeMessage<FileStatusRequest>(nullptr);
  }

  FileStatusRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileStatusRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileStatusRequest& from);
  void MergeFrom(const FileStatusRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:ofs.api.master.FileStatusRequest)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class FileStatusRespone :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.FileStatusRespone) */ {
 public:
  FileStatusRespone();
  virtual ~FileStatusRespone();

  FileStatusRespone(const FileStatusRespone& from);

  inline FileStatusRespone& operator=(const FileStatusRespone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileStatusRespone(FileStatusRespone&& from) noexcept
    : FileStatusRespone() {
    *this = ::std::move(from);
  }

  inline FileStatusRespone& operator=(FileStatusRespone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FileStatusRespone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileStatusRespone* internal_default_instance() {
    return reinterpret_cast<const FileStatusRespone*>(
               &_FileStatusRespone_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(FileStatusRespone* other);
  friend void swap(FileStatusRespone& a, FileStatusRespone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileStatusRespone* New() const final {
    return CreateMaybeMessage<FileStatusRespone>(nullptr);
  }

  FileStatusRespone* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileStatusRespone>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileStatusRespone& from);
  void MergeFrom(const FileStatusRespone& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileStatusRespone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ofs.api.master.File file = 2;
  bool has_file() const;
  void clear_file();
  static const int kFileFieldNumber = 2;
  const ::ofs::api::master::File& file() const;
  ::ofs::api::master::File* release_file();
  ::ofs::api::master::File* mutable_file();
  void set_allocated_file(::ofs::api::master::File* file);

  // required .ofs.api.master.ErrorCode errCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::ofs::api::master::ErrorCode errcode() const;
  void set_errcode(::ofs::api::master::ErrorCode value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.FileStatusRespone)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::ofs::api::master::File* file_;
  int errcode_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class EndPoint :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.EndPoint) */ {
 public:
  EndPoint();
  virtual ~EndPoint();

  EndPoint(const EndPoint& from);

  inline EndPoint& operator=(const EndPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndPoint(EndPoint&& from) noexcept
    : EndPoint() {
    *this = ::std::move(from);
  }

  inline EndPoint& operator=(EndPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EndPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndPoint* internal_default_instance() {
    return reinterpret_cast<const EndPoint*>(
               &_EndPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(EndPoint* other);
  friend void swap(EndPoint& a, EndPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndPoint* New() const final {
    return CreateMaybeMessage<EndPoint>(nullptr);
  }

  EndPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EndPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EndPoint& from);
  void MergeFrom(const EndPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string host = 2;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 2;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // required int32 port = 3;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.EndPoint)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 port_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class ReadRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.ReadRequest) */ {
 public:
  ReadRequest();
  virtual ~ReadRequest();

  ReadRequest(const ReadRequest& from);

  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadRequest(ReadRequest&& from) noexcept
    : ReadRequest() {
    *this = ::std::move(from);
  }

  inline ReadRequest& operator=(ReadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadRequest* internal_default_instance() {
    return reinterpret_cast<const ReadRequest*>(
               &_ReadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(ReadRequest* other);
  friend void swap(ReadRequest& a, ReadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadRequest* New() const final {
    return CreateMaybeMessage<ReadRequest>(nullptr);
  }

  ReadRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadRequest& from);
  void MergeFrom(const ReadRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // required int32 blockIndex = 3;
  bool has_blockindex() const;
  void clear_blockindex();
  static const int kBlockIndexFieldNumber = 3;
  ::google::protobuf::int32 blockindex() const;
  void set_blockindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.ReadRequest)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 blockindex_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class ReadResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.ReadResponse) */ {
 public:
  ReadResponse();
  virtual ~ReadResponse();

  ReadResponse(const ReadResponse& from);

  inline ReadResponse& operator=(const ReadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadResponse(ReadResponse&& from) noexcept
    : ReadResponse() {
    *this = ::std::move(from);
  }

  inline ReadResponse& operator=(ReadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadResponse* internal_default_instance() {
    return reinterpret_cast<const ReadResponse*>(
               &_ReadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(ReadResponse* other);
  friend void swap(ReadResponse& a, ReadResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadResponse* New() const final {
    return CreateMaybeMessage<ReadResponse>(nullptr);
  }

  ReadResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadResponse& from);
  void MergeFrom(const ReadResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ofs.api.master.EndPoint eps = 3;
  int eps_size() const;
  void clear_eps();
  static const int kEpsFieldNumber = 3;
  ::ofs::api::master::EndPoint* mutable_eps(int index);
  ::google::protobuf::RepeatedPtrField< ::ofs::api::master::EndPoint >*
      mutable_eps();
  const ::ofs::api::master::EndPoint& eps(int index) const;
  ::ofs::api::master::EndPoint* add_eps();
  const ::google::protobuf::RepeatedPtrField< ::ofs::api::master::EndPoint >&
      eps() const;

  // optional int64 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required .ofs.api.master.ErrorCode errCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::ofs::api::master::ErrorCode errcode() const;
  void set_errcode(::ofs::api::master::ErrorCode value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.ReadResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ofs::api::master::EndPoint > eps_;
  ::google::protobuf::int64 id_;
  int errcode_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class BlockLease :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.BlockLease) */ {
 public:
  BlockLease();
  virtual ~BlockLease();

  BlockLease(const BlockLease& from);

  inline BlockLease& operator=(const BlockLease& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BlockLease(BlockLease&& from) noexcept
    : BlockLease() {
    *this = ::std::move(from);
  }

  inline BlockLease& operator=(BlockLease&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BlockLease& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BlockLease* internal_default_instance() {
    return reinterpret_cast<const BlockLease*>(
               &_BlockLease_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(BlockLease* other);
  friend void swap(BlockLease& a, BlockLease& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BlockLease* New() const final {
    return CreateMaybeMessage<BlockLease>(nullptr);
  }

  BlockLease* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BlockLease>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BlockLease& from);
  void MergeFrom(const BlockLease& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BlockLease* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 chunkservers = 6;
  int chunkservers_size() const;
  void clear_chunkservers();
  static const int kChunkserversFieldNumber = 6;
  ::google::protobuf::int32 chunkservers(int index) const;
  void set_chunkservers(int index, ::google::protobuf::int32 value);
  void add_chunkservers(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chunkservers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chunkservers();

  // required string key = 7;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 7;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required .ofs.api.master.EndPoint ep = 5;
  bool has_ep() const;
  void clear_ep();
  static const int kEpFieldNumber = 5;
  const ::ofs::api::master::EndPoint& ep() const;
  ::ofs::api::master::EndPoint* release_ep();
  ::ofs::api::master::EndPoint* mutable_ep();
  void set_allocated_ep(::ofs::api::master::EndPoint* ep);

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int64 until = 2;
  bool has_until() const;
  void clear_until();
  static const int kUntilFieldNumber = 2;
  ::google::protobuf::int64 until() const;
  void set_until(::google::protobuf::int64 value);

  // required int64 version = 3;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // required int64 newVersion = 4;
  bool has_newversion() const;
  void clear_newversion();
  static const int kNewVersionFieldNumber = 4;
  ::google::protobuf::int64 newversion() const;
  void set_newversion(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.BlockLease)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chunkservers_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::ofs::api::master::EndPoint* ep_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 until_;
  ::google::protobuf::int64 version_;
  ::google::protobuf::int64 newversion_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class WriteRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.WriteRequest) */ {
 public:
  WriteRequest();
  virtual ~WriteRequest();

  WriteRequest(const WriteRequest& from);

  inline WriteRequest& operator=(const WriteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteRequest(WriteRequest&& from) noexcept
    : WriteRequest() {
    *this = ::std::move(from);
  }

  inline WriteRequest& operator=(WriteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WriteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteRequest* internal_default_instance() {
    return reinterpret_cast<const WriteRequest*>(
               &_WriteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(WriteRequest* other);
  friend void swap(WriteRequest& a, WriteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteRequest* New() const final {
    return CreateMaybeMessage<WriteRequest>(nullptr);
  }

  WriteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteRequest& from);
  void MergeFrom(const WriteRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // required int32 blockIndex = 3;
  bool has_blockindex() const;
  void clear_blockindex();
  static const int kBlockIndexFieldNumber = 3;
  ::google::protobuf::int32 blockindex() const;
  void set_blockindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.WriteRequest)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 blockindex_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class WriteResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.WriteResponse) */ {
 public:
  WriteResponse();
  virtual ~WriteResponse();

  WriteResponse(const WriteResponse& from);

  inline WriteResponse& operator=(const WriteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteResponse(WriteResponse&& from) noexcept
    : WriteResponse() {
    *this = ::std::move(from);
  }

  inline WriteResponse& operator=(WriteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WriteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteResponse* internal_default_instance() {
    return reinterpret_cast<const WriteResponse*>(
               &_WriteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(WriteResponse* other);
  friend void swap(WriteResponse& a, WriteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteResponse* New() const final {
    return CreateMaybeMessage<WriteResponse>(nullptr);
  }

  WriteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteResponse& from);
  void MergeFrom(const WriteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ofs.api.master.BlockLease lease = 2;
  bool has_lease() const;
  void clear_lease();
  static const int kLeaseFieldNumber = 2;
  const ::ofs::api::master::BlockLease& lease() const;
  ::ofs::api::master::BlockLease* release_lease();
  ::ofs::api::master::BlockLease* mutable_lease();
  void set_allocated_lease(::ofs::api::master::BlockLease* lease);

  // required .ofs.api.master.ErrorCode errCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::ofs::api::master::ErrorCode errcode() const;
  void set_errcode(::ofs::api::master::ErrorCode value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.WriteResponse)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::ofs::api::master::BlockLease* lease_;
  int errcode_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class AppendRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.AppendRequest) */ {
 public:
  AppendRequest();
  virtual ~AppendRequest();

  AppendRequest(const AppendRequest& from);

  inline AppendRequest& operator=(const AppendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppendRequest(AppendRequest&& from) noexcept
    : AppendRequest() {
    *this = ::std::move(from);
  }

  inline AppendRequest& operator=(AppendRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AppendRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppendRequest* internal_default_instance() {
    return reinterpret_cast<const AppendRequest*>(
               &_AppendRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(AppendRequest* other);
  friend void swap(AppendRequest& a, AppendRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppendRequest* New() const final {
    return CreateMaybeMessage<AppendRequest>(nullptr);
  }

  AppendRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppendRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppendRequest& from);
  void MergeFrom(const AppendRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppendRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:ofs.api.master.AppendRequest)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// -------------------------------------------------------------------

class AppendResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ofs.api.master.AppendResponse) */ {
 public:
  AppendResponse();
  virtual ~AppendResponse();

  AppendResponse(const AppendResponse& from);

  inline AppendResponse& operator=(const AppendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppendResponse(AppendResponse&& from) noexcept
    : AppendResponse() {
    *this = ::std::move(from);
  }

  inline AppendResponse& operator=(AppendResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AppendResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppendResponse* internal_default_instance() {
    return reinterpret_cast<const AppendResponse*>(
               &_AppendResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(AppendResponse* other);
  friend void swap(AppendResponse& a, AppendResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppendResponse* New() const final {
    return CreateMaybeMessage<AppendResponse>(nullptr);
  }

  AppendResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppendResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppendResponse& from);
  void MergeFrom(const AppendResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppendResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ofs.api.master.BlockLease lease = 2;
  bool has_lease() const;
  void clear_lease();
  static const int kLeaseFieldNumber = 2;
  const ::ofs::api::master::BlockLease& lease() const;
  ::ofs::api::master::BlockLease* release_lease();
  ::ofs::api::master::BlockLease* mutable_lease();
  void set_allocated_lease(::ofs::api::master::BlockLease* lease);

  // required .ofs.api.master.ErrorCode errCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::ofs::api::master::ErrorCode errcode() const;
  void set_errcode(::ofs::api::master::ErrorCode value);

  // @@protoc_insertion_point(class_scope:ofs.api.master.AppendResponse)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::ofs::api::master::BlockLease* lease_;
  int errcode_;
  friend struct ::TableStruct_OfsMaster_2eproto;
};
// ===================================================================

class OfsFileService_Stub;

class OfsFileService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline OfsFileService() {};
 public:
  virtual ~OfsFileService();

  typedef OfsFileService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Login(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::LoginReq* request,
                       ::ofs::api::master::LoginResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void MakeDir(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::MakeDirRequest* request,
                       ::ofs::api::master::MakeDirResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Create(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::CreateFileRequest* request,
                       ::ofs::api::master::CreateFileResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void List(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::ListRequest* request,
                       ::ofs::api::master::ListResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Remove(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::RemoveRequest* request,
                       ::ofs::api::master::RemoveResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Status(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::FileStatusRequest* request,
                       ::ofs::api::master::FileStatusRespone* response,
                       ::google::protobuf::Closure* done);
  virtual void Read(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::ReadRequest* request,
                       ::ofs::api::master::ReadResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Write(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::WriteRequest* request,
                       ::ofs::api::master::WriteResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Append(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::AppendRequest* request,
                       ::ofs::api::master::AppendResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(OfsFileService);
};

class OfsFileService_Stub : public OfsFileService {
 public:
  OfsFileService_Stub(::google::protobuf::RpcChannel* channel);
  OfsFileService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~OfsFileService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements OfsFileService ------------------------------------------

  void Login(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::LoginReq* request,
                       ::ofs::api::master::LoginResponse* response,
                       ::google::protobuf::Closure* done);
  void MakeDir(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::MakeDirRequest* request,
                       ::ofs::api::master::MakeDirResponse* response,
                       ::google::protobuf::Closure* done);
  void Create(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::CreateFileRequest* request,
                       ::ofs::api::master::CreateFileResponse* response,
                       ::google::protobuf::Closure* done);
  void List(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::ListRequest* request,
                       ::ofs::api::master::ListResponse* response,
                       ::google::protobuf::Closure* done);
  void Remove(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::RemoveRequest* request,
                       ::ofs::api::master::RemoveResponse* response,
                       ::google::protobuf::Closure* done);
  void Status(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::FileStatusRequest* request,
                       ::ofs::api::master::FileStatusRespone* response,
                       ::google::protobuf::Closure* done);
  void Read(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::ReadRequest* request,
                       ::ofs::api::master::ReadResponse* response,
                       ::google::protobuf::Closure* done);
  void Write(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::WriteRequest* request,
                       ::ofs::api::master::WriteResponse* response,
                       ::google::protobuf::Closure* done);
  void Append(::google::protobuf::RpcController* controller,
                       const ::ofs::api::master::AppendRequest* request,
                       ::ofs::api::master::AppendResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(OfsFileService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginReq

// required string name = 1;
inline bool LoginReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& LoginReq::name() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.LoginReq.name)
  return name_.GetNoArena();
}
inline void LoginReq::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.LoginReq.name)
}
#if LANG_CXX11
inline void LoginReq::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.LoginReq.name)
}
#endif
inline void LoginReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.LoginReq.name)
}
inline void LoginReq::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.LoginReq.name)
}
inline ::std::string* LoginReq::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.LoginReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_name() {
  // @@protoc_insertion_point(field_release:ofs.api.master.LoginReq.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.LoginReq.name)
}

// required string password = 2;
inline bool LoginReq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& LoginReq::password() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.LoginReq.password)
  return password_.GetNoArena();
}
inline void LoginReq::set_password(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.LoginReq.password)
}
#if LANG_CXX11
inline void LoginReq::set_password(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.LoginReq.password)
}
#endif
inline void LoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.LoginReq.password)
}
inline void LoginReq::set_password(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.LoginReq.password)
}
inline ::std::string* LoginReq::mutable_password() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.LoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_password() {
  // @@protoc_insertion_point(field_release:ofs.api.master.LoginReq.password)
  if (!has_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.LoginReq.password)
}

// -------------------------------------------------------------------

// LoginResponse

// required .ofs.api.master.ErrorCode errCode = 1;
inline bool LoginResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginResponse::clear_errcode() {
  errcode_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::ofs::api::master::ErrorCode LoginResponse::errcode() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.LoginResponse.errCode)
  return static_cast< ::ofs::api::master::ErrorCode >(errcode_);
}
inline void LoginResponse::set_errcode(::ofs::api::master::ErrorCode value) {
  assert(::ofs::api::master::ErrorCode_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  errcode_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.LoginResponse.errCode)
}

// optional string token = 2;
inline bool LoginResponse::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& LoginResponse::token() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.LoginResponse.token)
  return token_.GetNoArena();
}
inline void LoginResponse::set_token(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.LoginResponse.token)
}
#if LANG_CXX11
inline void LoginResponse::set_token(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.LoginResponse.token)
}
#endif
inline void LoginResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.LoginResponse.token)
}
inline void LoginResponse::set_token(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.LoginResponse.token)
}
inline ::std::string* LoginResponse::mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.LoginResponse.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_token() {
  // @@protoc_insertion_point(field_release:ofs.api.master.LoginResponse.token)
  if (!has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.LoginResponse.token)
}

// optional int32 blockSize = 3;
inline bool LoginResponse::has_blocksize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginResponse::clear_blocksize() {
  blocksize_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 LoginResponse::blocksize() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.LoginResponse.blockSize)
  return blocksize_;
}
inline void LoginResponse::set_blocksize(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  blocksize_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.LoginResponse.blockSize)
}

// -------------------------------------------------------------------

// MakeDirRequest

// required string token = 1;
inline bool MakeDirRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MakeDirRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MakeDirRequest::token() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.MakeDirRequest.token)
  return token_.GetNoArena();
}
inline void MakeDirRequest::set_token(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.MakeDirRequest.token)
}
#if LANG_CXX11
inline void MakeDirRequest::set_token(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.MakeDirRequest.token)
}
#endif
inline void MakeDirRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.MakeDirRequest.token)
}
inline void MakeDirRequest::set_token(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.MakeDirRequest.token)
}
inline ::std::string* MakeDirRequest::mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.MakeDirRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MakeDirRequest::release_token() {
  // @@protoc_insertion_point(field_release:ofs.api.master.MakeDirRequest.token)
  if (!has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MakeDirRequest::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.MakeDirRequest.token)
}

// required int32 authority = 2;
inline bool MakeDirRequest::has_authority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MakeDirRequest::clear_authority() {
  authority_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 MakeDirRequest::authority() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.MakeDirRequest.authority)
  return authority_;
}
inline void MakeDirRequest::set_authority(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  authority_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.MakeDirRequest.authority)
}

// required string directory = 3;
inline bool MakeDirRequest::has_directory() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MakeDirRequest::clear_directory() {
  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& MakeDirRequest::directory() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.MakeDirRequest.directory)
  return directory_.GetNoArena();
}
inline void MakeDirRequest::set_directory(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.MakeDirRequest.directory)
}
#if LANG_CXX11
inline void MakeDirRequest::set_directory(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  directory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.MakeDirRequest.directory)
}
#endif
inline void MakeDirRequest::set_directory(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.MakeDirRequest.directory)
}
inline void MakeDirRequest::set_directory(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.MakeDirRequest.directory)
}
inline ::std::string* MakeDirRequest::mutable_directory() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.MakeDirRequest.directory)
  return directory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MakeDirRequest::release_directory() {
  // @@protoc_insertion_point(field_release:ofs.api.master.MakeDirRequest.directory)
  if (!has_directory()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return directory_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MakeDirRequest::set_allocated_directory(::std::string* directory) {
  if (directory != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  directory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), directory);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.MakeDirRequest.directory)
}

// required string name = 4;
inline bool MakeDirRequest::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MakeDirRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& MakeDirRequest::name() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.MakeDirRequest.name)
  return name_.GetNoArena();
}
inline void MakeDirRequest::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.MakeDirRequest.name)
}
#if LANG_CXX11
inline void MakeDirRequest::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.MakeDirRequest.name)
}
#endif
inline void MakeDirRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.MakeDirRequest.name)
}
inline void MakeDirRequest::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.MakeDirRequest.name)
}
inline ::std::string* MakeDirRequest::mutable_name() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.MakeDirRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MakeDirRequest::release_name() {
  // @@protoc_insertion_point(field_release:ofs.api.master.MakeDirRequest.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MakeDirRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.MakeDirRequest.name)
}

// -------------------------------------------------------------------

// MakeDirResponse

// required .ofs.api.master.ErrorCode errCode = 1;
inline bool MakeDirResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MakeDirResponse::clear_errcode() {
  errcode_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::ofs::api::master::ErrorCode MakeDirResponse::errcode() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.MakeDirResponse.errCode)
  return static_cast< ::ofs::api::master::ErrorCode >(errcode_);
}
inline void MakeDirResponse::set_errcode(::ofs::api::master::ErrorCode value) {
  assert(::ofs::api::master::ErrorCode_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  errcode_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.MakeDirResponse.errCode)
}

// -------------------------------------------------------------------

// CreateFileRequest

// required string token = 1;
inline bool CreateFileRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateFileRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CreateFileRequest::token() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.CreateFileRequest.token)
  return token_.GetNoArena();
}
inline void CreateFileRequest::set_token(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.CreateFileRequest.token)
}
#if LANG_CXX11
inline void CreateFileRequest::set_token(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.CreateFileRequest.token)
}
#endif
inline void CreateFileRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.CreateFileRequest.token)
}
inline void CreateFileRequest::set_token(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.CreateFileRequest.token)
}
inline ::std::string* CreateFileRequest::mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.CreateFileRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateFileRequest::release_token() {
  // @@protoc_insertion_point(field_release:ofs.api.master.CreateFileRequest.token)
  if (!has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateFileRequest::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.CreateFileRequest.token)
}

// required int32 authority = 2;
inline bool CreateFileRequest::has_authority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateFileRequest::clear_authority() {
  authority_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CreateFileRequest::authority() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.CreateFileRequest.authority)
  return authority_;
}
inline void CreateFileRequest::set_authority(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  authority_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.CreateFileRequest.authority)
}

// required string directory = 3;
inline bool CreateFileRequest::has_directory() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateFileRequest::clear_directory() {
  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CreateFileRequest::directory() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.CreateFileRequest.directory)
  return directory_.GetNoArena();
}
inline void CreateFileRequest::set_directory(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.CreateFileRequest.directory)
}
#if LANG_CXX11
inline void CreateFileRequest::set_directory(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  directory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.CreateFileRequest.directory)
}
#endif
inline void CreateFileRequest::set_directory(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.CreateFileRequest.directory)
}
inline void CreateFileRequest::set_directory(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.CreateFileRequest.directory)
}
inline ::std::string* CreateFileRequest::mutable_directory() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.CreateFileRequest.directory)
  return directory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateFileRequest::release_directory() {
  // @@protoc_insertion_point(field_release:ofs.api.master.CreateFileRequest.directory)
  if (!has_directory()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return directory_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateFileRequest::set_allocated_directory(::std::string* directory) {
  if (directory != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  directory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), directory);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.CreateFileRequest.directory)
}

// required string name = 4;
inline bool CreateFileRequest::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateFileRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CreateFileRequest::name() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.CreateFileRequest.name)
  return name_.GetNoArena();
}
inline void CreateFileRequest::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.CreateFileRequest.name)
}
#if LANG_CXX11
inline void CreateFileRequest::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.CreateFileRequest.name)
}
#endif
inline void CreateFileRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.CreateFileRequest.name)
}
inline void CreateFileRequest::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.CreateFileRequest.name)
}
inline ::std::string* CreateFileRequest::mutable_name() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.CreateFileRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateFileRequest::release_name() {
  // @@protoc_insertion_point(field_release:ofs.api.master.CreateFileRequest.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateFileRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.CreateFileRequest.name)
}

// -------------------------------------------------------------------

// CreateFileResponse

// required .ofs.api.master.ErrorCode errCode = 1;
inline bool CreateFileResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateFileResponse::clear_errcode() {
  errcode_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::ofs::api::master::ErrorCode CreateFileResponse::errcode() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.CreateFileResponse.errCode)
  return static_cast< ::ofs::api::master::ErrorCode >(errcode_);
}
inline void CreateFileResponse::set_errcode(::ofs::api::master::ErrorCode value) {
  assert(::ofs::api::master::ErrorCode_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  errcode_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.CreateFileResponse.errCode)
}

// -------------------------------------------------------------------

// ListRequest

// required string token = 1;
inline bool ListRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ListRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ListRequest::token() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.ListRequest.token)
  return token_.GetNoArena();
}
inline void ListRequest::set_token(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.ListRequest.token)
}
#if LANG_CXX11
inline void ListRequest::set_token(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.ListRequest.token)
}
#endif
inline void ListRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.ListRequest.token)
}
inline void ListRequest::set_token(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.ListRequest.token)
}
inline ::std::string* ListRequest::mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.ListRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListRequest::release_token() {
  // @@protoc_insertion_point(field_release:ofs.api.master.ListRequest.token)
  if (!has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListRequest::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.ListRequest.token)
}

// required string path = 2;
inline bool ListRequest::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ListRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ListRequest::path() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.ListRequest.path)
  return path_.GetNoArena();
}
inline void ListRequest::set_path(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.ListRequest.path)
}
#if LANG_CXX11
inline void ListRequest::set_path(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.ListRequest.path)
}
#endif
inline void ListRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.ListRequest.path)
}
inline void ListRequest::set_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.ListRequest.path)
}
inline ::std::string* ListRequest::mutable_path() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.ListRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListRequest::release_path() {
  // @@protoc_insertion_point(field_release:ofs.api.master.ListRequest.path)
  if (!has_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListRequest::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.ListRequest.path)
}

// -------------------------------------------------------------------

// File

// required string name = 1;
inline bool File::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void File::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& File::name() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.File.name)
  return name_.GetNoArena();
}
inline void File::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.File.name)
}
#if LANG_CXX11
inline void File::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.File.name)
}
#endif
inline void File::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.File.name)
}
inline void File::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.File.name)
}
inline ::std::string* File::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.File.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_name() {
  // @@protoc_insertion_point(field_release:ofs.api.master.File.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.File.name)
}

// required string owner = 2;
inline bool File::has_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void File::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& File::owner() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.File.owner)
  return owner_.GetNoArena();
}
inline void File::set_owner(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.File.owner)
}
#if LANG_CXX11
inline void File::set_owner(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.File.owner)
}
#endif
inline void File::set_owner(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.File.owner)
}
inline void File::set_owner(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.File.owner)
}
inline ::std::string* File::mutable_owner() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.File.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_owner() {
  // @@protoc_insertion_point(field_release:ofs.api.master.File.owner)
  if (!has_owner()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return owner_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_owner(::std::string* owner) {
  if (owner != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.File.owner)
}

// required string group = 3;
inline bool File::has_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void File::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& File::group() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.File.group)
  return group_.GetNoArena();
}
inline void File::set_group(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.File.group)
}
#if LANG_CXX11
inline void File::set_group(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.File.group)
}
#endif
inline void File::set_group(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.File.group)
}
inline void File::set_group(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.File.group)
}
inline ::std::string* File::mutable_group() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.File.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_group() {
  // @@protoc_insertion_point(field_release:ofs.api.master.File.group)
  if (!has_group()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return group_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_group(::std::string* group) {
  if (group != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.File.group)
}

// required int32 authority = 4;
inline bool File::has_authority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void File::clear_authority() {
  authority_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 File::authority() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.File.authority)
  return authority_;
}
inline void File::set_authority(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  authority_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.File.authority)
}

// required int32 size = 5;
inline bool File::has_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void File::clear_size() {
  size_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 File::size() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.File.size)
  return size_;
}
inline void File::set_size(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  size_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.File.size)
}

// required int32 blockSize = 6;
inline bool File::has_blocksize() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void File::clear_blocksize() {
  blocksize_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::int32 File::blocksize() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.File.blockSize)
  return blocksize_;
}
inline void File::set_blocksize(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  blocksize_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.File.blockSize)
}

// required int64 createTime = 7;
inline bool File::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void File::clear_createtime() {
  createtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int64 File::createtime() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.File.createTime)
  return createtime_;
}
inline void File::set_createtime(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  createtime_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.File.createTime)
}

// required int64 updateTime = 8;
inline bool File::has_updatetime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void File::clear_updatetime() {
  updatetime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::int64 File::updatetime() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.File.updateTime)
  return updatetime_;
}
inline void File::set_updatetime(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.File.updateTime)
}

// required bool dir = 9;
inline bool File::has_dir() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void File::clear_dir() {
  dir_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool File::dir() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.File.dir)
  return dir_;
}
inline void File::set_dir(bool value) {
  _has_bits_[0] |= 0x00000080u;
  dir_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.File.dir)
}

// -------------------------------------------------------------------

// ListResponse

// required .ofs.api.master.ErrorCode errCode = 1;
inline bool ListResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ListResponse::clear_errcode() {
  errcode_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::ofs::api::master::ErrorCode ListResponse::errcode() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.ListResponse.errCode)
  return static_cast< ::ofs::api::master::ErrorCode >(errcode_);
}
inline void ListResponse::set_errcode(::ofs::api::master::ErrorCode value) {
  assert(::ofs::api::master::ErrorCode_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  errcode_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.ListResponse.errCode)
}

// repeated .ofs.api.master.File files = 2;
inline int ListResponse::files_size() const {
  return files_.size();
}
inline void ListResponse::clear_files() {
  files_.Clear();
}
inline ::ofs::api::master::File* ListResponse::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:ofs.api.master.ListResponse.files)
  return files_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ofs::api::master::File >*
ListResponse::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:ofs.api.master.ListResponse.files)
  return &files_;
}
inline const ::ofs::api::master::File& ListResponse::files(int index) const {
  // @@protoc_insertion_point(field_get:ofs.api.master.ListResponse.files)
  return files_.Get(index);
}
inline ::ofs::api::master::File* ListResponse::add_files() {
  // @@protoc_insertion_point(field_add:ofs.api.master.ListResponse.files)
  return files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ofs::api::master::File >&
ListResponse::files() const {
  // @@protoc_insertion_point(field_list:ofs.api.master.ListResponse.files)
  return files_;
}

// -------------------------------------------------------------------

// RemoveRequest

// required string token = 1;
inline bool RemoveRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RemoveRequest::token() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.RemoveRequest.token)
  return token_.GetNoArena();
}
inline void RemoveRequest::set_token(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.RemoveRequest.token)
}
#if LANG_CXX11
inline void RemoveRequest::set_token(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.RemoveRequest.token)
}
#endif
inline void RemoveRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.RemoveRequest.token)
}
inline void RemoveRequest::set_token(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.RemoveRequest.token)
}
inline ::std::string* RemoveRequest::mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.RemoveRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveRequest::release_token() {
  // @@protoc_insertion_point(field_release:ofs.api.master.RemoveRequest.token)
  if (!has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveRequest::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.RemoveRequest.token)
}

// required string path = 2;
inline bool RemoveRequest::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& RemoveRequest::path() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.RemoveRequest.path)
  return path_.GetNoArena();
}
inline void RemoveRequest::set_path(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.RemoveRequest.path)
}
#if LANG_CXX11
inline void RemoveRequest::set_path(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.RemoveRequest.path)
}
#endif
inline void RemoveRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.RemoveRequest.path)
}
inline void RemoveRequest::set_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.RemoveRequest.path)
}
inline ::std::string* RemoveRequest::mutable_path() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.RemoveRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveRequest::release_path() {
  // @@protoc_insertion_point(field_release:ofs.api.master.RemoveRequest.path)
  if (!has_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveRequest::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.RemoveRequest.path)
}

// -------------------------------------------------------------------

// RemoveResponse

// required .ofs.api.master.ErrorCode errCode = 1;
inline bool RemoveResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveResponse::clear_errcode() {
  errcode_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::ofs::api::master::ErrorCode RemoveResponse::errcode() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.RemoveResponse.errCode)
  return static_cast< ::ofs::api::master::ErrorCode >(errcode_);
}
inline void RemoveResponse::set_errcode(::ofs::api::master::ErrorCode value) {
  assert(::ofs::api::master::ErrorCode_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  errcode_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.RemoveResponse.errCode)
}

// -------------------------------------------------------------------

// FileStatusRequest

// required string token = 1;
inline bool FileStatusRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileStatusRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FileStatusRequest::token() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.FileStatusRequest.token)
  return token_.GetNoArena();
}
inline void FileStatusRequest::set_token(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.FileStatusRequest.token)
}
#if LANG_CXX11
inline void FileStatusRequest::set_token(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.FileStatusRequest.token)
}
#endif
inline void FileStatusRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.FileStatusRequest.token)
}
inline void FileStatusRequest::set_token(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.FileStatusRequest.token)
}
inline ::std::string* FileStatusRequest::mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.FileStatusRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileStatusRequest::release_token() {
  // @@protoc_insertion_point(field_release:ofs.api.master.FileStatusRequest.token)
  if (!has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileStatusRequest::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.FileStatusRequest.token)
}

// required string path = 2;
inline bool FileStatusRequest::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileStatusRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& FileStatusRequest::path() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.FileStatusRequest.path)
  return path_.GetNoArena();
}
inline void FileStatusRequest::set_path(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.FileStatusRequest.path)
}
#if LANG_CXX11
inline void FileStatusRequest::set_path(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.FileStatusRequest.path)
}
#endif
inline void FileStatusRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.FileStatusRequest.path)
}
inline void FileStatusRequest::set_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.FileStatusRequest.path)
}
inline ::std::string* FileStatusRequest::mutable_path() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.FileStatusRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileStatusRequest::release_path() {
  // @@protoc_insertion_point(field_release:ofs.api.master.FileStatusRequest.path)
  if (!has_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileStatusRequest::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.FileStatusRequest.path)
}

// -------------------------------------------------------------------

// FileStatusRespone

// required .ofs.api.master.ErrorCode errCode = 1;
inline bool FileStatusRespone::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileStatusRespone::clear_errcode() {
  errcode_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::ofs::api::master::ErrorCode FileStatusRespone::errcode() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.FileStatusRespone.errCode)
  return static_cast< ::ofs::api::master::ErrorCode >(errcode_);
}
inline void FileStatusRespone::set_errcode(::ofs::api::master::ErrorCode value) {
  assert(::ofs::api::master::ErrorCode_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  errcode_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.FileStatusRespone.errCode)
}

// optional .ofs.api.master.File file = 2;
inline bool FileStatusRespone::has_file() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileStatusRespone::clear_file() {
  if (file_ != nullptr) file_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ofs::api::master::File& FileStatusRespone::file() const {
  const ::ofs::api::master::File* p = file_;
  // @@protoc_insertion_point(field_get:ofs.api.master.FileStatusRespone.file)
  return p != nullptr ? *p : *reinterpret_cast<const ::ofs::api::master::File*>(
      &::ofs::api::master::_File_default_instance_);
}
inline ::ofs::api::master::File* FileStatusRespone::release_file() {
  // @@protoc_insertion_point(field_release:ofs.api.master.FileStatusRespone.file)
  _has_bits_[0] &= ~0x00000001u;
  ::ofs::api::master::File* temp = file_;
  file_ = nullptr;
  return temp;
}
inline ::ofs::api::master::File* FileStatusRespone::mutable_file() {
  _has_bits_[0] |= 0x00000001u;
  if (file_ == nullptr) {
    auto* p = CreateMaybeMessage<::ofs::api::master::File>(GetArenaNoVirtual());
    file_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ofs.api.master.FileStatusRespone.file)
  return file_;
}
inline void FileStatusRespone::set_allocated_file(::ofs::api::master::File* file) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete file_;
  }
  if (file) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      file = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, file, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  file_ = file;
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.FileStatusRespone.file)
}

// -------------------------------------------------------------------

// EndPoint

// required string host = 2;
inline bool EndPoint::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EndPoint::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& EndPoint::host() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.EndPoint.host)
  return host_.GetNoArena();
}
inline void EndPoint::set_host(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.EndPoint.host)
}
#if LANG_CXX11
inline void EndPoint::set_host(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.EndPoint.host)
}
#endif
inline void EndPoint::set_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.EndPoint.host)
}
inline void EndPoint::set_host(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.EndPoint.host)
}
inline ::std::string* EndPoint::mutable_host() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.EndPoint.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndPoint::release_host() {
  // @@protoc_insertion_point(field_release:ofs.api.master.EndPoint.host)
  if (!has_host()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return host_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndPoint::set_allocated_host(::std::string* host) {
  if (host != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.EndPoint.host)
}

// required int32 port = 3;
inline bool EndPoint::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EndPoint::clear_port() {
  port_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 EndPoint::port() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.EndPoint.port)
  return port_;
}
inline void EndPoint::set_port(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  port_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.EndPoint.port)
}

// -------------------------------------------------------------------

// ReadRequest

// required string token = 1;
inline bool ReadRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ReadRequest::token() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.ReadRequest.token)
  return token_.GetNoArena();
}
inline void ReadRequest::set_token(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.ReadRequest.token)
}
#if LANG_CXX11
inline void ReadRequest::set_token(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.ReadRequest.token)
}
#endif
inline void ReadRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.ReadRequest.token)
}
inline void ReadRequest::set_token(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.ReadRequest.token)
}
inline ::std::string* ReadRequest::mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.ReadRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadRequest::release_token() {
  // @@protoc_insertion_point(field_release:ofs.api.master.ReadRequest.token)
  if (!has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadRequest::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.ReadRequest.token)
}

// required string path = 2;
inline bool ReadRequest::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ReadRequest::path() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.ReadRequest.path)
  return path_.GetNoArena();
}
inline void ReadRequest::set_path(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.ReadRequest.path)
}
#if LANG_CXX11
inline void ReadRequest::set_path(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.ReadRequest.path)
}
#endif
inline void ReadRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.ReadRequest.path)
}
inline void ReadRequest::set_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.ReadRequest.path)
}
inline ::std::string* ReadRequest::mutable_path() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.ReadRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadRequest::release_path() {
  // @@protoc_insertion_point(field_release:ofs.api.master.ReadRequest.path)
  if (!has_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadRequest::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.ReadRequest.path)
}

// required int32 blockIndex = 3;
inline bool ReadRequest::has_blockindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReadRequest::clear_blockindex() {
  blockindex_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ReadRequest::blockindex() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.ReadRequest.blockIndex)
  return blockindex_;
}
inline void ReadRequest::set_blockindex(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  blockindex_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.ReadRequest.blockIndex)
}

// -------------------------------------------------------------------

// ReadResponse

// required .ofs.api.master.ErrorCode errCode = 1;
inline bool ReadResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadResponse::clear_errcode() {
  errcode_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::ofs::api::master::ErrorCode ReadResponse::errcode() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.ReadResponse.errCode)
  return static_cast< ::ofs::api::master::ErrorCode >(errcode_);
}
inline void ReadResponse::set_errcode(::ofs::api::master::ErrorCode value) {
  assert(::ofs::api::master::ErrorCode_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  errcode_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.ReadResponse.errCode)
}

// optional int64 id = 2;
inline bool ReadResponse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadResponse::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 ReadResponse::id() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.ReadResponse.id)
  return id_;
}
inline void ReadResponse::set_id(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.ReadResponse.id)
}

// repeated .ofs.api.master.EndPoint eps = 3;
inline int ReadResponse::eps_size() const {
  return eps_.size();
}
inline void ReadResponse::clear_eps() {
  eps_.Clear();
}
inline ::ofs::api::master::EndPoint* ReadResponse::mutable_eps(int index) {
  // @@protoc_insertion_point(field_mutable:ofs.api.master.ReadResponse.eps)
  return eps_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ofs::api::master::EndPoint >*
ReadResponse::mutable_eps() {
  // @@protoc_insertion_point(field_mutable_list:ofs.api.master.ReadResponse.eps)
  return &eps_;
}
inline const ::ofs::api::master::EndPoint& ReadResponse::eps(int index) const {
  // @@protoc_insertion_point(field_get:ofs.api.master.ReadResponse.eps)
  return eps_.Get(index);
}
inline ::ofs::api::master::EndPoint* ReadResponse::add_eps() {
  // @@protoc_insertion_point(field_add:ofs.api.master.ReadResponse.eps)
  return eps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ofs::api::master::EndPoint >&
ReadResponse::eps() const {
  // @@protoc_insertion_point(field_list:ofs.api.master.ReadResponse.eps)
  return eps_;
}

// -------------------------------------------------------------------

// BlockLease

// required int64 id = 1;
inline bool BlockLease::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlockLease::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 BlockLease::id() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.BlockLease.id)
  return id_;
}
inline void BlockLease::set_id(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  id_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.BlockLease.id)
}

// required int64 until = 2;
inline bool BlockLease::has_until() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BlockLease::clear_until() {
  until_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 BlockLease::until() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.BlockLease.until)
  return until_;
}
inline void BlockLease::set_until(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  until_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.BlockLease.until)
}

// required int64 version = 3;
inline bool BlockLease::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BlockLease::clear_version() {
  version_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int64 BlockLease::version() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.BlockLease.version)
  return version_;
}
inline void BlockLease::set_version(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  version_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.BlockLease.version)
}

// required int64 newVersion = 4;
inline bool BlockLease::has_newversion() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BlockLease::clear_newversion() {
  newversion_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int64 BlockLease::newversion() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.BlockLease.newVersion)
  return newversion_;
}
inline void BlockLease::set_newversion(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  newversion_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.BlockLease.newVersion)
}

// required .ofs.api.master.EndPoint ep = 5;
inline bool BlockLease::has_ep() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlockLease::clear_ep() {
  if (ep_ != nullptr) ep_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::ofs::api::master::EndPoint& BlockLease::ep() const {
  const ::ofs::api::master::EndPoint* p = ep_;
  // @@protoc_insertion_point(field_get:ofs.api.master.BlockLease.ep)
  return p != nullptr ? *p : *reinterpret_cast<const ::ofs::api::master::EndPoint*>(
      &::ofs::api::master::_EndPoint_default_instance_);
}
inline ::ofs::api::master::EndPoint* BlockLease::release_ep() {
  // @@protoc_insertion_point(field_release:ofs.api.master.BlockLease.ep)
  _has_bits_[0] &= ~0x00000002u;
  ::ofs::api::master::EndPoint* temp = ep_;
  ep_ = nullptr;
  return temp;
}
inline ::ofs::api::master::EndPoint* BlockLease::mutable_ep() {
  _has_bits_[0] |= 0x00000002u;
  if (ep_ == nullptr) {
    auto* p = CreateMaybeMessage<::ofs::api::master::EndPoint>(GetArenaNoVirtual());
    ep_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ofs.api.master.BlockLease.ep)
  return ep_;
}
inline void BlockLease::set_allocated_ep(::ofs::api::master::EndPoint* ep) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ep_;
  }
  if (ep) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ep = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ep, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  ep_ = ep;
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.BlockLease.ep)
}

// repeated int32 chunkservers = 6;
inline int BlockLease::chunkservers_size() const {
  return chunkservers_.size();
}
inline void BlockLease::clear_chunkservers() {
  chunkservers_.Clear();
}
inline ::google::protobuf::int32 BlockLease::chunkservers(int index) const {
  // @@protoc_insertion_point(field_get:ofs.api.master.BlockLease.chunkservers)
  return chunkservers_.Get(index);
}
inline void BlockLease::set_chunkservers(int index, ::google::protobuf::int32 value) {
  chunkservers_.Set(index, value);
  // @@protoc_insertion_point(field_set:ofs.api.master.BlockLease.chunkservers)
}
inline void BlockLease::add_chunkservers(::google::protobuf::int32 value) {
  chunkservers_.Add(value);
  // @@protoc_insertion_point(field_add:ofs.api.master.BlockLease.chunkservers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BlockLease::chunkservers() const {
  // @@protoc_insertion_point(field_list:ofs.api.master.BlockLease.chunkservers)
  return chunkservers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BlockLease::mutable_chunkservers() {
  // @@protoc_insertion_point(field_mutable_list:ofs.api.master.BlockLease.chunkservers)
  return &chunkservers_;
}

// required string key = 7;
inline bool BlockLease::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlockLease::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& BlockLease::key() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.BlockLease.key)
  return key_.GetNoArena();
}
inline void BlockLease::set_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.BlockLease.key)
}
#if LANG_CXX11
inline void BlockLease::set_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.BlockLease.key)
}
#endif
inline void BlockLease::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.BlockLease.key)
}
inline void BlockLease::set_key(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.BlockLease.key)
}
inline ::std::string* BlockLease::mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.BlockLease.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockLease::release_key() {
  // @@protoc_insertion_point(field_release:ofs.api.master.BlockLease.key)
  if (!has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockLease::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.BlockLease.key)
}

// -------------------------------------------------------------------

// WriteRequest

// required string token = 1;
inline bool WriteRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& WriteRequest::token() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.WriteRequest.token)
  return token_.GetNoArena();
}
inline void WriteRequest::set_token(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.WriteRequest.token)
}
#if LANG_CXX11
inline void WriteRequest::set_token(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.WriteRequest.token)
}
#endif
inline void WriteRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.WriteRequest.token)
}
inline void WriteRequest::set_token(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.WriteRequest.token)
}
inline ::std::string* WriteRequest::mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.WriteRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequest::release_token() {
  // @@protoc_insertion_point(field_release:ofs.api.master.WriteRequest.token)
  if (!has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.WriteRequest.token)
}

// required string path = 2;
inline bool WriteRequest::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& WriteRequest::path() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.WriteRequest.path)
  return path_.GetNoArena();
}
inline void WriteRequest::set_path(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.WriteRequest.path)
}
#if LANG_CXX11
inline void WriteRequest::set_path(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.WriteRequest.path)
}
#endif
inline void WriteRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.WriteRequest.path)
}
inline void WriteRequest::set_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.WriteRequest.path)
}
inline ::std::string* WriteRequest::mutable_path() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.WriteRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequest::release_path() {
  // @@protoc_insertion_point(field_release:ofs.api.master.WriteRequest.path)
  if (!has_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.WriteRequest.path)
}

// required int32 blockIndex = 3;
inline bool WriteRequest::has_blockindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WriteRequest::clear_blockindex() {
  blockindex_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 WriteRequest::blockindex() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.WriteRequest.blockIndex)
  return blockindex_;
}
inline void WriteRequest::set_blockindex(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  blockindex_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.WriteRequest.blockIndex)
}

// -------------------------------------------------------------------

// WriteResponse

// required .ofs.api.master.ErrorCode errCode = 1;
inline bool WriteResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteResponse::clear_errcode() {
  errcode_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::ofs::api::master::ErrorCode WriteResponse::errcode() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.WriteResponse.errCode)
  return static_cast< ::ofs::api::master::ErrorCode >(errcode_);
}
inline void WriteResponse::set_errcode(::ofs::api::master::ErrorCode value) {
  assert(::ofs::api::master::ErrorCode_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  errcode_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.WriteResponse.errCode)
}

// required .ofs.api.master.BlockLease lease = 2;
inline bool WriteResponse::has_lease() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteResponse::clear_lease() {
  if (lease_ != nullptr) lease_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ofs::api::master::BlockLease& WriteResponse::lease() const {
  const ::ofs::api::master::BlockLease* p = lease_;
  // @@protoc_insertion_point(field_get:ofs.api.master.WriteResponse.lease)
  return p != nullptr ? *p : *reinterpret_cast<const ::ofs::api::master::BlockLease*>(
      &::ofs::api::master::_BlockLease_default_instance_);
}
inline ::ofs::api::master::BlockLease* WriteResponse::release_lease() {
  // @@protoc_insertion_point(field_release:ofs.api.master.WriteResponse.lease)
  _has_bits_[0] &= ~0x00000001u;
  ::ofs::api::master::BlockLease* temp = lease_;
  lease_ = nullptr;
  return temp;
}
inline ::ofs::api::master::BlockLease* WriteResponse::mutable_lease() {
  _has_bits_[0] |= 0x00000001u;
  if (lease_ == nullptr) {
    auto* p = CreateMaybeMessage<::ofs::api::master::BlockLease>(GetArenaNoVirtual());
    lease_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ofs.api.master.WriteResponse.lease)
  return lease_;
}
inline void WriteResponse::set_allocated_lease(::ofs::api::master::BlockLease* lease) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete lease_;
  }
  if (lease) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      lease = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lease, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  lease_ = lease;
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.WriteResponse.lease)
}

// -------------------------------------------------------------------

// AppendRequest

// required string token = 1;
inline bool AppendRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppendRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& AppendRequest::token() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.AppendRequest.token)
  return token_.GetNoArena();
}
inline void AppendRequest::set_token(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.AppendRequest.token)
}
#if LANG_CXX11
inline void AppendRequest::set_token(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.AppendRequest.token)
}
#endif
inline void AppendRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.AppendRequest.token)
}
inline void AppendRequest::set_token(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.AppendRequest.token)
}
inline ::std::string* AppendRequest::mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.AppendRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppendRequest::release_token() {
  // @@protoc_insertion_point(field_release:ofs.api.master.AppendRequest.token)
  if (!has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppendRequest::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.AppendRequest.token)
}

// required string path = 2;
inline bool AppendRequest::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppendRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& AppendRequest::path() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.AppendRequest.path)
  return path_.GetNoArena();
}
inline void AppendRequest::set_path(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ofs.api.master.AppendRequest.path)
}
#if LANG_CXX11
inline void AppendRequest::set_path(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ofs.api.master.AppendRequest.path)
}
#endif
inline void AppendRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ofs.api.master.AppendRequest.path)
}
inline void AppendRequest::set_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ofs.api.master.AppendRequest.path)
}
inline ::std::string* AppendRequest::mutable_path() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:ofs.api.master.AppendRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppendRequest::release_path() {
  // @@protoc_insertion_point(field_release:ofs.api.master.AppendRequest.path)
  if (!has_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppendRequest::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.AppendRequest.path)
}

// -------------------------------------------------------------------

// AppendResponse

// required .ofs.api.master.ErrorCode errCode = 1;
inline bool AppendResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppendResponse::clear_errcode() {
  errcode_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::ofs::api::master::ErrorCode AppendResponse::errcode() const {
  // @@protoc_insertion_point(field_get:ofs.api.master.AppendResponse.errCode)
  return static_cast< ::ofs::api::master::ErrorCode >(errcode_);
}
inline void AppendResponse::set_errcode(::ofs::api::master::ErrorCode value) {
  assert(::ofs::api::master::ErrorCode_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  errcode_ = value;
  // @@protoc_insertion_point(field_set:ofs.api.master.AppendResponse.errCode)
}

// required .ofs.api.master.BlockLease lease = 2;
inline bool AppendResponse::has_lease() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppendResponse::clear_lease() {
  if (lease_ != nullptr) lease_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ofs::api::master::BlockLease& AppendResponse::lease() const {
  const ::ofs::api::master::BlockLease* p = lease_;
  // @@protoc_insertion_point(field_get:ofs.api.master.AppendResponse.lease)
  return p != nullptr ? *p : *reinterpret_cast<const ::ofs::api::master::BlockLease*>(
      &::ofs::api::master::_BlockLease_default_instance_);
}
inline ::ofs::api::master::BlockLease* AppendResponse::release_lease() {
  // @@protoc_insertion_point(field_release:ofs.api.master.AppendResponse.lease)
  _has_bits_[0] &= ~0x00000001u;
  ::ofs::api::master::BlockLease* temp = lease_;
  lease_ = nullptr;
  return temp;
}
inline ::ofs::api::master::BlockLease* AppendResponse::mutable_lease() {
  _has_bits_[0] |= 0x00000001u;
  if (lease_ == nullptr) {
    auto* p = CreateMaybeMessage<::ofs::api::master::BlockLease>(GetArenaNoVirtual());
    lease_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ofs.api.master.AppendResponse.lease)
  return lease_;
}
inline void AppendResponse::set_allocated_lease(::ofs::api::master::BlockLease* lease) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete lease_;
  }
  if (lease) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      lease = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lease, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  lease_ = lease;
  // @@protoc_insertion_point(field_set_allocated:ofs.api.master.AppendResponse.lease)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace master
}  // namespace api
}  // namespace ofs

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ofs::api::master::ErrorCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ofs::api::master::ErrorCode>() {
  return ::ofs::api::master::ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::ofs::api::master::AuthorityType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ofs::api::master::AuthorityType>() {
  return ::ofs::api::master::AuthorityType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_OfsMaster_2eproto
