syntax = "proto2";
option cc_generic_services = true;

package ofs.api;

enum ErrorCode {
	EC_NONE = 0;
	EC_FILE_NOT_EIXST = 1;
	EC_FILE_EIXST = 2;
	EC_PERMISSION_DENY = 3;
	EC_DIR_NOT_EMPTY = 4;
	EC_AUTHORITY_EXPIRE = 5;
	EC_IS_DIR = 6;
	EC_USER_OR_PASSWORD_ERROR = 7;
	EC_USER_EXPIRE = 8;
	EC_IS_NOT_DIRECTORY = 9;
	EC_ALREADY_EXIST_DELETE_FILE = 10;
}

enum AuthorityType {
	AT_OWNER_READ = 1;
	AT_OWNER_WRITE = 2;
	AT_OWNER_EXECUTE = 4;
	AT_GROUP_READ = 8;
	AT_GROUP_WRITE = 16;
	AT_GROUP_EXECUTE = 32;
	AT_OTHER_READ = 64;
	AT_OTHER_WRITE = 128;
	AT_OTHER_EXECUTE = 256;
}

message LoginReq {
	required string name = 1;
	required string password = 2;
}

message LoginResponse {
	required ErrorCode errCode = 1;
	optional string token = 2;
}

message MakeDirRequest {
	required string token = 1;
	required int32 authority = 2;
	required string directory = 3;
	required string name = 4;
}

message MakeDirResponse {
	required ErrorCode errCode = 1; 
}

message CreateFileRequest {
	required string token = 1;
	required int32 authority = 2;
	required string directory = 3;
	required string name = 4;
}

message CreateFileResponse {
	required ErrorCode errCode = 1; 
}

message ListRequest {
	required string token = 1;
	required string path = 2;
}

message File {
	required string name = 1;
	required string owner = 2;
	required string group = 3;
	required int32 authority = 4;
	required int32 size = 5;
	required int64 createTime = 6;
	required int64 updateTime = 7;
	required bool dir = 8;
}

message ListResponse {
	required ErrorCode errCode = 1;
	repeated File files = 2;
}

message RemoveRequest {
	required string token = 1;
	required string path = 2;
}

message RemoveResponse {
	required ErrorCode errCode = 1; 
}

message FileStatusRequest {
	required string token = 1;
	required string path = 2;
}

message FileStatusRespone {
	required ErrorCode errCode = 1; 
	optional File file = 2;
}

message Chunk {
	required string id = 1;
	required string host = 2;
	required int32 port = 3;
}

message ReadRequest {
	required string token = 1;
	required string path = 2;
	required int32 offset = 3;
}

message ReadResponse {
	required ErrorCode errCode = 1; 
	repeated Chunk chunks = 2;
}

message WriteRequest {
	required string token = 1;
	required string path = 2;
	required int32 offset = 3;
}

message WriteResponse {
	required ErrorCode errCode = 1; 
	repeated Chunk chunks = 2;
}

service OfsFileService {
	rpc Login (LoginReq) returns (LoginResponse);
	rpc MakeDir (MakeDirRequest) returns (MakeDirResponse);
	rpc Create (CreateFileRequest) returns (CreateFileResponse);
	rpc List (ListRequest) returns (ListResponse);
	rpc Remove (RemoveRequest) returns (RemoveResponse);
	rpc Status (FileStatusRequest) returns (FileStatusRespone);
	rpc Read (ReadRequest) returns (ReadResponse);
	rpc Write (WriteRequest) returns (WriteResponse);
}
