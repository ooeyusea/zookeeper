syntax = "proto2";
option cc_generic_services = true;

package ofs.c2m;

message RegisterChunkServerRequest {
	required int32 id = 1;
	required string host = 2;
	required int32 port = 3;
}

message RegisterChunkServerResponse {
	required bool ok = 1;
}

enum ErrorCode{
	EC_OK = 0;
	EC_BLOCK_CLEAN = 1;
	EC_BLOCK_RECOVER = 2;
	EC_BLOCK_NOT_EXIST = 3;
	EC_REPLICA_DO_NOT_HAS_LEASE = 4;
}

message BlockStatus {
	required int64 id = 1;
	required int64 version = 2;
	required int32 size = 3;
}

message ReportRequest {
	required int32 id = 1;
	required BlockStatus blocks = 2;
}

message RecoverInfo {
	required int64 until = 1;
	required int64 version = 2;
	required int64 newVersion = 3;
	required int32 copyTo = 4;
	repeated int32 chunkservers = 5;
}

message ReportResponse {
	required ErrorCode errCode = 1;
	optional RecoverInfo recoverInfo = 2;
}

message RenewLeaseRequest {
	required int32 id = 1;
	required int64 blockId = 2;
}

message Lease {
	required int64 until = 1;
	required int64 version = 2;
	required int64 newVersion = 3;
	repeated int32 chunkservers = 4;
}

message RenewLeaseResponse {
	required ErrorCode errCode = 1;
	optional Lease lease = 2;
}

service OfsChunkService {
	rpc RegisterChunkServer (RegisterChunkServerRequest) returns (RegisterChunkServerResponse);
	rpc Report (ReportRequest) returns (ReportResponse);
	rpc RenewLease (RenewLeaseRequest) returns (RenewLeaseResponse);
}
